<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.qualitytest.dao.experimentalvalue.QualityTestExperimentalValueXjlSfDao">
	<!-- QualityTestExperimentalValueXjlSf的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_QualityTestExperimentalValueXjlSf_Map" type="com.jiaoke.qualitytest.bean.experimentalvalue.QualityTestExperimentalValueXjlSf">
		<id column="ID" property="id" />
		<result column="order_ticket_num" property="orderTicketNum" />
		<result column="experimental_id" property="experimentalId" />
		<result column="experimental_name" property="experimentalName" />
		<result column="SK132" property="sK132" />
		<result column="SK95" property="sK95" />
		<result column="SK475" property="sK475" />
		<result column="SK236" property="sK236" />
		<result column="SK118" property="sK118" />
		<result column="SK06" property="sK06" />
		<result column="SK03" property="sK03" />
		<result column="SK015" property="sK015" />
		<result column="SK0075" property="sK0075" />
		<result column="SD" property="sD" />
	</resultMap>

	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
								separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
								separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:quality_test_experimental_value_xjl_sf的列名 -->
	<sql id="quality_test_experimental_value_xjl_sf_Column">
		ID,order_ticket_num,experimental_id,experimental_name,SK132,SK95,SK475,SK236,SK118,SK06,SK03,SK015,SK0075,SD
	</sql>

	<!--获得类名为:QualityTestExperimentalValueXjlSf对应的数据库表的数据总行数 -->
	<select id="getQualityTestExperimentalValueXjlSfRowCount" parameterType="com.jiaoke.common.bean.Assist" resultType="java.lang.Long">
		select count(*) from quality_test_experimental_value_xjl_sf
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>
	
	<!-- 获得类名为:QualityTestExperimentalValueXjlSf对应数据库中表的数据集合 -->
	<select id="selectQualityTestExperimentalValueXjlSf" parameterType="com.jiaoke.common.bean.Assist" resultMap="result_QualityTestExperimentalValueXjlSf_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="quality_test_experimental_value_xjl_sf_Column" />
			</otherwise>
		</choose>
		from quality_test_experimental_value_xjl_sf
		<if test="require!=null">
			<include refid="assist" />
		</if>
		<if test="order !=null">${order}</if>
		<choose>
			<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
			<when test="rowSize !=null">LIMIT #{rowSize}</when>
		</choose>
	</select>
	<!-- 通过QualityTestExperimentalValueXjlSf的id获得对应数据库中表的数据对象 -->
	<select id="selectQualityTestExperimentalValueXjlSfById" parameterType="Integer" resultMap="result_QualityTestExperimentalValueXjlSf_Map">
		select
		<include refid="quality_test_experimental_value_xjl_sf_Column" />
		from quality_test_experimental_value_xjl_sf
		where ID = #{id}
	</select>
	
	<!-- 获得一个QualityTestExperimentalValueXjlSf对象,以参数QualityTestExperimentalValueXjlSf对象中不为空的属性作为条件进行查询 -->
	<select id="selectQualityTestExperimentalValueXjlSfObjSingle" parameterType="com.jiaoke.qualitytest.bean.experimentalvalue.QualityTestExperimentalValueXjlSf" resultMap="result_QualityTestExperimentalValueXjlSf_Map">
		select
		<include refid="quality_test_experimental_value_xjl_sf_Column" />
		from quality_test_experimental_value_xjl_sf
		<where>
		<if test="orderTicketNum != null"> and order_ticket_num = #{orderTicketNum}</if>
		<if test="experimentalId != null"> and experimental_id = #{experimentalId}</if>
		<if test="experimentalName != null"> and experimental_name = #{experimentalName}</if>
		<if test="sK132 != null"> and SK132 = #{sK132}</if>
		<if test="sK95 != null"> and SK95 = #{sK95}</if>
		<if test="sK475 != null"> and SK475 = #{sK475}</if>
		<if test="sK236 != null"> and SK236 = #{sK236}</if>
		<if test="sK118 != null"> and SK118 = #{sK118}</if>
		<if test="sK06 != null"> and SK06 = #{sK06}</if>
		<if test="sK03 != null"> and SK03 = #{sK03}</if>
		<if test="sK015 != null"> and SK015 = #{sK015}</if>
		<if test="sK0075 != null"> and SK0075 = #{sK0075}</if>
		<if test="sD != null"> and SD = #{sD}</if>
		<if test="id != null"> and ID = #{id} </if>
		</where>
		LIMIT 1
	</select>
	
	<!-- 获得QualityTestExperimentalValueXjlSf对象,以参数QualityTestExperimentalValueXjlSf对象中不为空的属性作为条件进行查询 -->
	<select id="selectQualityTestExperimentalValueXjlSfByObj" parameterType="com.jiaoke.qualitytest.bean.experimentalvalue.QualityTestExperimentalValueXjlSf" resultMap="result_QualityTestExperimentalValueXjlSf_Map">
		select
		<include refid="quality_test_experimental_value_xjl_sf_Column" />
		from quality_test_experimental_value_xjl_sf
		<where>
		<if test="orderTicketNum != null"> and order_ticket_num = #{orderTicketNum}</if>
		<if test="experimentalId != null"> and experimental_id = #{experimentalId}</if>
		<if test="experimentalName != null"> and experimental_name = #{experimentalName}</if>
		<if test="sK132 != null"> and SK132 = #{sK132}</if>
		<if test="sK95 != null"> and SK95 = #{sK95}</if>
		<if test="sK475 != null"> and SK475 = #{sK475}</if>
		<if test="sK236 != null"> and SK236 = #{sK236}</if>
		<if test="sK118 != null"> and SK118 = #{sK118}</if>
		<if test="sK06 != null"> and SK06 = #{sK06}</if>
		<if test="sK03 != null"> and SK03 = #{sK03}</if>
		<if test="sK015 != null"> and SK015 = #{sK015}</if>
		<if test="sK0075 != null"> and SK0075 = #{sK0075}</if>
		<if test="sD != null"> and SD = #{sD}</if>
		<if test="id != null"> and ID = #{id} </if>
		</where>
	</select>

	<!-- 将QualityTestExperimentalValueXjlSf插入到对应数据库的表中,包括属性值为null的数据 -->
	<insert id="insertQualityTestExperimentalValueXjlSf" parameterType="com.jiaoke.qualitytest.bean.experimentalvalue.QualityTestExperimentalValueXjlSf">
		insert into 
		quality_test_experimental_value_xjl_sf (ID,order_ticket_num,experimental_id,experimental_name,SK132,SK95,SK475,SK236,SK118,SK06,SK03,SK015,SK0075,SD) 
		values(#{id},#{orderTicketNum},#{experimentalId},#{experimentalName},#{sK132},#{sK95},#{sK475},#{sK236},#{sK118},#{sK06},#{sK03},#{sK015},#{sK0075},#{sD})
	</insert>

	<!-- 将QualityTestExperimentalValueXjlSf中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullQualityTestExperimentalValueXjlSf" parameterType="com.jiaoke.qualitytest.bean.experimentalvalue.QualityTestExperimentalValueXjlSf">
		insert into quality_test_experimental_value_xjl_sf
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">ID,</if>
			<if test="orderTicketNum != null">order_ticket_num,</if>
			<if test="experimentalId != null">experimental_id,</if>
			<if test="experimentalName != null">experimental_name,</if>
			<if test="sK132 != null">SK132,</if>
			<if test="sK95 != null">SK95,</if>
			<if test="sK475 != null">SK475,</if>
			<if test="sK236 != null">SK236,</if>
			<if test="sK118 != null">SK118,</if>
			<if test="sK06 != null">SK06,</if>
			<if test="sK03 != null">SK03,</if>
			<if test="sK015 != null">SK015,</if>
			<if test="sK0075 != null">SK0075,</if>
			<if test="sD != null">SD,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="orderTicketNum != null">#{orderTicketNum},</if>
			<if test="experimentalId != null">#{experimentalId},</if>
			<if test="experimentalName != null">#{experimentalName},</if>
			<if test="sK132 != null">#{sK132},</if>
			<if test="sK95 != null">#{sK95},</if>
			<if test="sK475 != null">#{sK475},</if>
			<if test="sK236 != null">#{sK236},</if>
			<if test="sK118 != null">#{sK118},</if>
			<if test="sK06 != null">#{sK06},</if>
			<if test="sK03 != null">#{sK03},</if>
			<if test="sK015 != null">#{sK015},</if>
			<if test="sK0075 != null">#{sK0075},</if>
			<if test="sD != null">#{sD},</if>
		</trim>
	</insert>

	<!-- 将QualityTestExperimentalValueXjlSf批量插入到对应数据库的表中 -->
	<insert id="insertQualityTestExperimentalValueXjlSfByBatch" parameterType="ArrayList">
		insert into quality_test_experimental_value_xjl_sf(ID,order_ticket_num,experimental_id,experimental_name,SK132,SK95,SK475,SK236,SK118,SK06,SK03,SK015,SK0075,SD) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id},#{item.orderTicketNum},#{item.experimentalId},#{item.experimentalName},#{item.sK132},#{item.sK95},#{item.sK475},#{item.sK236},#{item.sK118},#{item.sK06},#{item.sK03},#{item.sK015},#{item.sK0075},#{item.sD})
		</foreach>
	</insert>
	
	<!-- 通过QualityTestExperimentalValueXjlSf的id将数据库表中对应的数据删除 -->
	<delete id="deleteQualityTestExperimentalValueXjlSfById" parameterType="Integer">
		delete from quality_test_experimental_value_xjl_sf
		where  ID  =  #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将QualityTestExperimentalValueXjlSf对应的数据库表的数据删除 -->
	<delete id="deleteQualityTestExperimentalValueXjlSfByAssist" parameterType="com.jiaoke.common.bean.Assist">
		delete from quality_test_experimental_value_xjl_sf
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</delete>
	
	<!-- 通过QualityTestExperimentalValueXjlSf的id将QualityTestExperimentalValueXjlSf的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateQualityTestExperimentalValueXjlSfById" parameterType="com.jiaoke.qualitytest.bean.experimentalvalue.QualityTestExperimentalValueXjlSf">
		update quality_test_experimental_value_xjl_sf set
		<set>
			order_ticket_num = #{orderTicketNum} , 
			experimental_id = #{experimentalId} , 
			experimental_name = #{experimentalName} , 
			SK132 = #{sK132} , 
			SK95 = #{sK95} , 
			SK475 = #{sK475} , 
			SK236 = #{sK236} , 
			SK118 = #{sK118} , 
			SK06 = #{sK06} , 
			SK03 = #{sK03} , 
			SK015 = #{sK015} , 
			SK0075 = #{sK0075} , 
			SD = #{sD} , 
		</set>
		where ID = #{id}
	</update>
	
	<!-- 通过QualityTestExperimentalValueXjlSf的id将QualityTestExperimentalValueXjlSf中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullQualityTestExperimentalValueXjlSfById" parameterType="com.jiaoke.qualitytest.bean.experimentalvalue.QualityTestExperimentalValueXjlSf">
		update quality_test_experimental_value_xjl_sf
		<set>
					<if test="orderTicketNum != null">order_ticket_num = #{orderTicketNum},</if>
					<if test="experimentalId != null">experimental_id = #{experimentalId},</if>
					<if test="experimentalName != null">experimental_name = #{experimentalName},</if>
					<if test="sK132 != null">SK132 = #{sK132},</if>
					<if test="sK95 != null">SK95 = #{sK95},</if>
					<if test="sK475 != null">SK475 = #{sK475},</if>
					<if test="sK236 != null">SK236 = #{sK236},</if>
					<if test="sK118 != null">SK118 = #{sK118},</if>
					<if test="sK06 != null">SK06 = #{sK06},</if>
					<if test="sK03 != null">SK03 = #{sK03},</if>
					<if test="sK015 != null">SK015 = #{sK015},</if>
					<if test="sK0075 != null">SK0075 = #{sK0075},</if>
					<if test="sD != null">SD = #{sD},</if>
		</set>
		where ID = #{id}
	</update>
	
	<!-- 通过辅助工具Assist中的条件将QualityTestExperimentalValueXjlSf中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateQualityTestExperimentalValueXjlSf" parameterType="map">
		update quality_test_experimental_value_xjl_sf
		<set>
			ID = #{enti.id},
			order_ticket_num = #{enti.orderTicketNum},
			experimental_id = #{enti.experimentalId},
			experimental_name = #{enti.experimentalName},
			SK132 = #{enti.sK132},
			SK95 = #{enti.sK95},
			SK475 = #{enti.sK475},
			SK236 = #{enti.sK236},
			SK118 = #{enti.sK118},
			SK06 = #{enti.sK06},
			SK03 = #{enti.sK03},
			SK015 = #{enti.sK015},
			SK0075 = #{enti.sK0075},
			SD = #{enti.sD},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将QualityTestExperimentalValueXjlSf中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullQualityTestExperimentalValueXjlSf" parameterType="map">
		update quality_test_experimental_value_xjl_sf
		<set>
			<if test="enti.id != null">ID = #{enti.id},</if>
			<if test="enti.orderTicketNum != null">order_ticket_num = #{enti.orderTicketNum},</if>
			<if test="enti.experimentalId != null">experimental_id = #{enti.experimentalId},</if>
			<if test="enti.experimentalName != null">experimental_name = #{enti.experimentalName},</if>
			<if test="enti.sK132 != null">SK132 = #{enti.sK132},</if>
			<if test="enti.sK95 != null">SK95 = #{enti.sK95},</if>
			<if test="enti.sK475 != null">SK475 = #{enti.sK475},</if>
			<if test="enti.sK236 != null">SK236 = #{enti.sK236},</if>
			<if test="enti.sK118 != null">SK118 = #{enti.sK118},</if>
			<if test="enti.sK06 != null">SK06 = #{enti.sK06},</if>
			<if test="enti.sK03 != null">SK03 = #{enti.sK03},</if>
			<if test="enti.sK015 != null">SK015 = #{enti.sK015},</if>
			<if test="enti.sK0075 != null">SK0075 = #{enti.sK0075},</if>
			<if test="enti.sD != null">SD = #{enti.sD},</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
</mapper>
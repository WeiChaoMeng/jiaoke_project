<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.quality.dao.QualityExperimentalManagerDao">
    <select id="getMaterialList" resultType="java.util.Map">
        SELECT * FROM quality_test_material_dictionary;
    </select>

    <select id="getManufacturersList" resultType="java.util.Map">
        SELECT * FROM quality_test_manufacturers_dictionaries;
    </select>

    <select id="getSpecificationList" resultType="java.util.Map">
        SELECT * FROM quality_test_specification_dictionary;    </select>

    <select id="selectAllSamplingPage" resultType="java.util.Map">
        SELECT
               QTS.Id,
               QTM.`name` AS material,
               DATE_FORMAT(QTS.creat_time,'%Y-%m-%d %H:%i:%S') AS creat_time,
               QTD.`name` AS manufacturers,
               QTSD.`name` AS specification,
               QTS.tunnage,
               QTS.remark,
               QTS.`status`
        FROM
             quality_test_samplingPage AS QTS
                 INNER JOIN quality_test_material_dictionary AS QTM ON QTS.materials_num = QTM.Id
                 INNER JOIN quality_test_manufacturers_dictionaries AS QTD ON QTS.manufacturers_num = QTD.Id
                 INNER JOIN quality_test_specification_dictionary AS QTSD ON QTS.specification_num = QTSD.Id
        ORDER BY
                 `status`,Id DESC;
    </select>

    <delete id="delectSampleById" parameterType="java.lang.String" >
        DELETE
        FROM
             quality_test_samplingPage
        WHERE
                Id = #{id}
    </delete>

    <insert id="insertSample" parameterType="java.lang.String" useGeneratedKeys="true" >
        INSERT INTO quality_test_samplingPage (
                materials_num,
                creat_time,
                manufacturers_num,
                specification_num,
                tunnage,
                remark
                )
        VALUES
               (
                #{materials},
                #{creat_time},
                #{manufacturers},
                #{specification},
                #{tunnage},
                #{remark}
                       )
    </insert>

    <select id="selectSampleMessageById" resultType="java.util.Map">
        SELECT
               QTS.*, QTMD.logogram_name
        FROM
             quality_test_samplingPage AS QTS
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTS.materials_num = QTMD.Id
        WHERE
                QTS.Id = #{id}
    </select>

    <update id="updateSampleMessageById" useGeneratedKeys="true">
        UPDATE quality_test_samplingPage
        SET `status` = 1
        WHERE
                Id = #{id}
    </update>

    <select id="selectLastOrderTicketByDate" resultType="java.util.Map" >
        SELECT
               Id as counts
        FROM
             quality_test_order_ticket
        WHERE
                date_format(creat_time,'%Y')  = #{date}
        ORDER BY id DESC
        LIMIT 1
    </select>

    <insert id="insertOrderTicketBySampleMssage" useGeneratedKeys="true" parameterType="java.lang.String">
        INSERT INTO quality_test_order_ticket (
                order_ticket_num,
                sampling_id,
                creat_time,
                manufacturers_num,
                specification_num,
                tunnage,
                test_num
                )
        VALUES
               (
                       #{orderTicketNum},
                       #{sampling_id},
                       #{date},
                       #{manufacturers_num},
                       #{specification_num},
                       #{tunnage},
                       #{test_num}
                       );
    </insert>

    <select id="selectAllexperimental" resultType="java.util.Map">
        SELECT
               QTOT.Id,
               QTOT.order_ticket_num,
               QTOT.sampling_id,
               DATE_FORMAT(QTOT.creat_time,'%Y-%m-%d %H:%i:%S') AS creat_time,
               QTMD.`name` AS manufacturers,
               QTSD.`name` AS specification,
               QTOT.tunnage,
               QTOT.`status`
        FROM
             quality_test_order_ticket AS QTOT
                 INNER JOIN quality_test_manufacturers_dictionaries AS QTMD ON QTOT.manufacturers_num = QTMD.Id
                 INNER JOIN quality_test_specification_dictionary AS QTSD ON QTOT.specification_num = QTSD.Id
        ORDER BY
                 `status`,Id DESC;
    </select>

    <select id="selectExperimentalMessageById" resultType="java.util.Map">
        SELECT
               QTOT.Id,
               QTOT.order_ticket_num,
               DATE_FORMAT(QTOT.creat_time,'%Y-%m-%d %H:%i:%S') AS creat_time,
               materialt.name as material,
               QTMD. NAME AS manufacturers,
               QTSD. NAME AS specification,
               QTOT.tunnage
        FROM
             `quality_test_order_ticket` AS QTOT
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
                 INNER JOIN quality_test_manufacturers_dictionaries AS QTMD ON QTS.manufacturers_num = QTMD.Id
                 INNER JOIN quality_test_specification_dictionary AS QTSD ON QTSD.Id = QTOT.specification_num
                 INNER JOIN quality_test_material_dictionary AS materialt ON materialt.Id = QTS.materials_num
        WHERE
                QTOT.Id = #{id}
    </select>

    <select id="selectExperimentalItemByOrderNum" resultType="java.util.Map">
        SELECT
               QTEID.*
        FROM
             quality_test_experiment_contrast AS QTEC
                 INNER JOIN quality_test_experiment_ietm_dictionary AS QTEID ON QTEC.experimentId = QTEID.Id
        WHERE QTEC.orderTicketNum = #{orderNum}
    </select>

    <select id="getExperimentalItemById" resultType="java.util.Map">
        SELECT
               QTEID.*
        FROM
             `quality_test_order_ticket` AS QTOT
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTS.materials_num = QTMD.Id
                 INNER JOIN quality_test_experiment_ietm_dictionary AS QTEID ON QTEID.material_num = QTMD.Id
        WHERE QTOT.Id = #{id}
    </select>

    <insert id="addExperimentalItemByOrderTicketNum" useGeneratedKeys="true" keyColumn="id">
        insert into quality_test_experiment_contrast (orderTicketNum,experimentId)
        values
        <foreach collection="ids" index="index" item="item" separator=",">
            (
              #{orderTicketNum},#{item}
            )
        </foreach>
    </insert>

    <select id="selectExperimentalItemCount" resultType="java.util.Map">
        SELECT count(*) as counts FROM `quality_test_experiment_contrast` WHERE orderTicketNum = #{orderTicketNum};
    </select>

    <select id="getOrderTicketByOrderTicketNum" resultType="java.util.Map">
        SELECT
               QTOT.*, QTS.materials_num,
               DATE_FORMAT(QTS.creat_time,'%Y-%m-%d %H:%i:%S')  AS samplingTime,
               QTMD.`name` AS materialName,
               QTMD.experiment_short,
               QTMD.logogram_name,
               QTSD.`name` AS specificationName,
               QTMFD.`name` AS manufacturersName,
               QTS.remark
        FROM
             `quality_test_order_ticket` AS QTOT
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTS.materials_num = QTMD.Id
                 INNER JOIN quality_test_specification_dictionary AS QTSD ON QTOT.specification_num = QTSD.Id
                 INNER JOIN quality_test_manufacturers_dictionaries AS QTMFD ON QTS.manufacturers_num = QTMFD.Id
        WHERE
                QTOT.order_ticket_num = #{orderTicketNum}

    </select>
    <insert id="insertTaskList" useGeneratedKeys="true" >
        INSERT INTO quality_test_task_list (
                ticket_num,
                test_num,
                creat_time,
                materials_name,
                specification_name,
                use_reason
                )
        VALUES
               (
                #{order_ticket_num},
                #{test_num},
                #{result},
                #{materialName},
                #{specificationName},
                #{remark}
                       )
    </insert>

    <select id="selectLabReportConuntByDateAndMaterials" resultType="java.util.Map">
        SELECT
               QTLR.experiment_num,
               QTMD.logogram_name
        FROM
             quality_test_lab_report AS QTLR
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        WHERE
                DATE_FORMAT(test_date, '%Y') =  #{dates}
          AND materials_num = #{materials_num}
        ORDER BY QTLR.Id DESC
        LIMIT 1
    </select>

    <insert id="insertLabReport">
        INSERT INTO quality_test_lab_report (
                id,
                experiment_num,
                order_ticket_num,
                materials_num,
                entrusting_party,
                manufacturers_name,
                sampling_date,
                test_date,
                required_experimental,
                experimental_procedures,
                sampling_spot,
                sampling_standard
                )
        VALUES
               (
                #{id},
                #{experimentNum},
                #{order_ticket_num},
                #{materials_num},
                #{entrustingParty},
                #{manufacturersName},
                #{samplingTime},
                #{creatTime},
                #{requiredExperimental},
                #{logogram_name},
                #{samplingSpot},
                #{specificationName})
    </insert>

    <select id="selectExperimentItme" resultType="java.util.Map">
        SELECT
               QTEID.`name`
        FROM
             quality_test_experiment_contrast AS QTEC
                 INNER JOIN quality_test_experiment_ietm_dictionary AS QTEID ON QTEC.experimentId = QTEID.Id
        WHERE
                QTEC.orderTicketNum = #{order_ticket_num}
    </select>

    <select id="selectAllExperimentalItem" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.sampling_date,'%Y-%m-%d') AS sampling_date,
               DATE_FORMAT(QTLR.test_date, '%Y-%m-%d') AS test_date,
               QTLR.*,
               QTMD.`name` AS materials_name
        FROM
             `quality_test_lab_report` AS QTLR
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        ORDER BY QTLR.experiment_status,QTLR.test_date DESC;
    </select>

    <select id="selectExperimentalItemMsgById" resultType="java.util.Map">
        SELECT
               QTLR.Id,
               QTLR.experiment_num,
               QTLR.experiment_status,
               QTLR.order_ticket_num,
               QTLR.materials_num,
               QTLR.entrusting_party,
               QTLR.manufacturers_name,
               DATE_FORMAT(
                   QTLR.sampling_date,
                   '%Y-%m-%d'
                       ) AS sampling_date,
               DATE_FORMAT(
                   QTLR.test_date,
                   '%Y-%m-%d'
                       ) AS test_date,
               QTLR.required_experimental,
               QTLR.experimental_procedures,
               QTLR.sampling_spot,
               QTLR.sampling_standard,
               QTLR.verdict,
               QTLR.charge_person,
               QTLR.check_person,
               QTLR.report_person,
               QTLR.report_date,
               QTMD.`name` AS materials_name
        FROM
             `quality_test_lab_report` AS QTLR
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        WHERE
                QTLR.Id = #{id};
    </select>

    <select id="selectExperimentalItemNumList" resultType="java.util.Map">

        SELECT
               QTEC.*,
               QTEID.material_num,
               QTEID.Id AS experimentId,
               QTEID.`name`,
               QTEID.remake,
               QTEID.table_name,
               QTEID.unit,
               QTEID.method,
               QTLR.sampling_standard
        FROM
             `quality_test_lab_report` AS QTLR
                 INNER JOIN quality_test_experiment_contrast AS QTEC
                     ON QTLR.order_ticket_num = QTEC.orderTicketNum
                 INNER JOIN quality_test_experiment_ietm_dictionary AS QTEID
                     ON QTEC.experimentId = QTEID.Id
        where QTLR.Id =#{id};
    </select>

    <update id="updateLabReport" useGeneratedKeys="true"  parameterType="java.util.Map">
        UPDATE quality_test_lab_report
        SET experiment_num = #{map.experiment_num},
            experiment_status = '1',
            order_ticket_num = #{map.order_ticket_num},
            materials_num = #{map.materials_num},
            entrusting_party = #{map.entrusting_party},
            manufacturers_name = #{map.manufacturers_name},
            sampling_date = #{map.sampling_date},
            test_date = #{map.test_date},
            required_experimental = #{map.required_experimental},
            experimental_procedures = #{map.experimental_procedures},
            sampling_spot = #{map.sampling_spot},
            sampling_standard = #{map.sampling_standard},
            verdict = #{map.verdict},
            <if test="map.charge_person != null" >
                charge_person = #{map.charge_person},
            </if>
            <if test="map.check_person != null" >
                check_person = #{map.check_person},
            </if>
            <if test="map.report_person != null" >
                report_person = #{map.report_person},
            </if>
            report_date = #{map.report_date}
        WHERE Id =#{map.Id}
    </update>

    <insert id="insertFineAggregate" useGeneratedKeys="true" >
        INSERT INTO quality_test_fine_aggregate (
        experiment_num,
        fine_name,
        fine_requirements,
        fine_result,
        fine_method
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.fine_name},#{emp.fine_requirements},#{emp.fine_result},#{emp.fine_method})
        </foreach>
    </insert>

    <insert id="insertFineAggregateSieving" useGeneratedKeys="true" >
        INSERT INTO quality_test_fine_aggregate_sieving (
        experiment_num,
        fine_sieve_pore,
        fine_sieve_pore_4_75,
        fine_sieve_pore_2_36,
        fine_sieve_pore_1_18,
        fine_sieve_pore_0_6,
        fine_sieve_pore_0_3,
        fine_sieve_pore_0_15,
        fine_sieve_pore_0_075
        )
        values
        <foreach collection="coarseTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.fine_sieve_pore},#{emp.fine_sieve_pore_4_75},#{emp.fine_sieve_pore_2_36},#{emp.fine_sieve_pore_1_18},#{emp.fine_sieve_pore_0_6},#{emp.fine_sieve_pore_0_3},#{emp.fine_sieve_pore_0_15},#{emp.fine_sieve_pore_0_075})
        </foreach>
    </insert>

    <insert id="insertCoarseAggregate" useGeneratedKeys="true" >
        INSERT INTO quality_test_coarse_aggregate (
        experiment_num,
        coarse_name,
        coarse_requirements,
        coarse_result,
        coarse_method
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.coarse_name},#{emp.coarse_requirements},#{emp.coarse_result},#{emp.coarse_method})
        </foreach>
    </insert>

    <insert id="insertCoarseAggregateSieving" useGeneratedKeys="true" >
        INSERT INTO quality_test_coarse_aggregate_sieving (
        experiment_num,
        coarse_sieve_pore,
        coarse_sieve_pore_37_5,
        coarse_sieve_pore_31_5,
        coarse_sieve_pore_26_5,
        coarse_sieve_pore_19_0,
        coarse_sieve_pore_16_0,
        coarse_sieve_pore_13_2,
        coarse_sieve_pore_9_5,
        coarse_sieve_pore_4_75,
        coarse_sieve_pore_2_36,
        coarse_sieve_pore_1_18,
        coarse_sieve_pore_0_6,
        coarse_sieve_pore_0_3,
        coarse_sieve_pore_0_15,
        coarse_sieve_pore_0_075
        )
        values
        <foreach collection="coarseTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.coarse_sieve_pore},#{emp.coarse_sieve_pore_37_5},#{emp.coarse_sieve_pore_31_5},#{emp.coarse_sieve_pore_26_5},#{emp.coarse_sieve_pore_19_0},#{emp.coarse_sieve_pore_16_0},#{emp.coarse_sieve_pore_13_2},#{emp.coarse_sieve_pore_9_5},#{emp.coarse_sieve_pore_4_75},#{emp.coarse_sieve_pore_2_36},#{emp.coarse_sieve_pore_1_18},#{emp.coarse_sieve_pore_0_6},#{emp.coarse_sieve_pore_0_3},#{emp.coarse_sieve_pore_0_15},#{emp.coarse_sieve_pore_0_075})
        </foreach>
    </insert>

    <insert id="insertAsphalt" useGeneratedKeys="true" >
        INSERT INTO quality_test_asphalt (
        experiment_num,
        asphalt_name,
        asphalt_unit,
        asphalt_result,
        asphalt_method,
        asphalt_requirements
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.asphalt_name},#{emp.asphalt_unit},#{emp.asphalt_result},#{emp.asphalt_method},#{emp.asphalt_requirements})
        </foreach>
    </insert>
    <insert id="insertCoarseMilling" useGeneratedKeys="true">
        insert into `quality_test_coarse_milling`
        (
        `experiment_num`,
        `mill_name`,
        `mill_requirements`,
        `mill_result`,
        `mill_method`
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.milling_name},#{emp.milling_requirements},#{emp.milling_result},#{emp.milling_method})
        </foreach>
    </insert>
    <insert id="insertCoarseMillingBurn" useGeneratedKeys="true">
        insert into `quality_test_coarse_milling_burn`
        (
        `experiment_num`,
        `mill_sieve_pore`,
        `mill_sieve_pore_37_5`,
        `mill_sieve_pore_31_5`,
        `mill_sieve_pore_26_5`,
        `mill_sieve_pore_19_0`,
        `mill_sieve_pore_16_0`,
        `mill_sieve_pore_13_2`,
        `mill_sieve_pore_9_5`,
        `mill_sieve_pore_4_75`,
        `mill_sieve_pore_2_36`,
        `mill_sieve_pore_1_18`,
        `mill_sieve_pore_0_6`,
        `mill_sieve_pore_0_3`,
        `mill_sieve_pore_0_15`,
        `mill_sieve_pore_0_075`
        )
        values
        <foreach collection="coarseMillTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.mill_sieve_pore},#{emp.mill_sieve_pore_31_5},#{emp.mill_sieve_pore_31_5},#{emp.mill_sieve_pore_26_5},#{emp.mill_sieve_pore_19_0},#{emp.mill_sieve_pore_16_0},#{emp.mill_sieve_pore_13_2},#{emp.mill_sieve_pore_9_5},#{emp.mill_sieve_pore_4_75},#{emp.mill_sieve_pore_2_36},#{emp.mill_sieve_pore_1_18},#{emp.mill_sieve_pore_0_6},#{emp.mill_sieve_pore_0_3},#{emp.mill_sieve_pore_0_15},#{emp.mill_sieve_pore_0_075})
        </foreach>
    </insert>

    <insert id="insertRock" useGeneratedKeys="true">
        insert into `quality_test_rock`
        (
        `experiment_num`,
        `rock_name`,
        `rock_requirements`,
        `rock_result`,
        `rock_method`
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.rock_name},#{emp.rock_requirements},#{emp.rock_result},#{emp.rock_method})
        </foreach>
    </insert>
    <insert id="insertRockBurn" useGeneratedKeys="true">
        insert into `quality_test_rock_burn`
        (
        `experiment_num`,
        `rock_sieve_pore`,
        `rock_sieve_pore_37_5`,
        `rock_sieve_pore_31_5`,
        `rock_sieve_pore_26_5`,
        `rock_sieve_pore_19_0`,
        `rock_sieve_pore_16_0`,
        `rock_sieve_pore_13_2`,
        `rock_sieve_pore_9_5`,
        `rock_sieve_pore_4_75`,
        `rock_sieve_pore_2_36`,
        `rock_sieve_pore_1_18`,
        `rock_sieve_pore_0_6`,
        `rock_sieve_pore_0_3`,
        `rock_sieve_pore_0_15`,
        `rock_sieve_pore_0_075`
        )
        values
        <foreach collection="rockList" item="emp" separator=",">
            (#{experimentNum},#{emp.rock_sieve_pore},#{emp.rock_sieve_pore_37_5},#{emp.rock_sieve_pore_31_5},#{emp.rock_sieve_pore_26_5},#{emp.rock_sieve_pore_19_0},#{emp.rock_sieve_pore_16_0},#{emp.rock_sieve_pore_13_2},#{emp.rock_sieve_pore_9_5},#{emp.rock_sieve_pore_4_75},#{emp.rock_sieve_pore_2_36},#{emp.rock_sieve_pore_1_18},#{emp.rock_sieve_pore_0_6},#{emp.rock_sieve_pore_0_3},#{emp.rock_sieve_pore_0_15},#{emp.rock_sieve_pore_0_075})
        </foreach>
    </insert>

    <insert id="insertFibre" useGeneratedKeys="true">
        insert into `quality_test_fibre`
        (
        `experiment_num`,
        `fibre_name`,
        `fibre_requirements`,
        `fibre_result`,
        `fibre_method`
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.fibre_name},#{emp.fibre_requirements},#{emp.fibre_result},#{emp.fibre_method})
        </foreach>
    </insert>

    <insert id="insertEmulsified" useGeneratedKeys="true">
        insert into `quality_test_emulsified`
        (
        `experiment_num`,
        `emulsified_name`,
        `emulsified_requirements`,
        `emulsified_result`,
        `emulsified_method`
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.emulsified_name},#{emp.emulsified_requirements},#{emp.emulsified_result},#{emp.emulsified_method})
        </foreach>
    </insert>

    <insert id="insertMixture" useGeneratedKeys="true">
        insert into `quality_test_mixture`
        (
        `experiment_num`,
        `mixture_name`,
        `mixture_requirements`,
        `mixture_result`,
        `mixture_method`
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.mixture_name},#{emp.mixture_requirements},#{emp.mixture_result},#{emp.mixture_method})
        </foreach>
    </insert>
    <insert id="insertMixtureBurn" useGeneratedKeys="true">

        insert into `quality_test_mixture_burn`
        (
        `experiment_num`,
        `mixture_sieve_pore`,
        `mixture_sieve_pore_37_5`,
        `mixture_sieve_pore_31_5`,
        `mixture_sieve_pore_26_5`,
        `mixture_sieve_pore_19_0`,
        `mixture_sieve_pore_16_0`,
        `mixture_sieve_pore_13_2`,
        `mixture_sieve_pore_9_5`,
        `mixture_sieve_pore_4_75`,
        `mixture_sieve_pore_2_36`,
        `mixture_sieve_pore_1_18`,
        `mixture_sieve_pore_0_6`,
        `mixture_sieve_pore_0_3`,
        `mixture_sieve_pore_0_15`,
        `mixture_sieve_pore_0_075`
        )
        values
        <foreach collection="mixtureList" item="emp" separator=",">
            (#{experimentNum},#{emp.mixture_sieve_pore},#{emp.mixture_sieve_pore_37_5},#{emp.mixture_sieve_pore_31_5},#{emp.mixture_sieve_pore_26_5},#{emp.mixture_sieve_pore_19_0},#{emp.mixture_sieve_pore_16_0},#{emp.mixture_sieve_pore_13_2},#{emp.mixture_sieve_pore_9_5},#{emp.mixture_sieve_pore_4_75},#{emp.mixture_sieve_pore_2_36},#{emp.mixture_sieve_pore_1_18},#{emp.mixture_sieve_pore_0_6},#{emp.mixture_sieve_pore_0_3},#{emp.mixture_sieve_pore_0_15},#{emp.mixture_sieve_pore_0_075})
        </foreach>
    </insert>

    <insert id="insertFineMilling" useGeneratedKeys="true">
        insert into `quality_test_fine_milling`
        (
        `experiment_num`,
        `millfine_name`,
        `millfine_requirements`,
        `millfine_result`,
        `millfine_method`
        )
        values
        <foreach collection="firstTestList" item="emp" separator=",">
            (#{experimentNum},#{emp.millfine_name},#{emp.millfine_requirements},#{emp.millfine_result},#{emp.millfine_method})
        </foreach>
    </insert>
    <insert id="insertFineMillingBurn" useGeneratedKeys="true">
        insert into `quality_test_fine_milling_burn`
        (
        `experiment_num`,
        `millfine_sieve_pore`,
        `millfine_sieve_pore_37_5`,
        `millfine_sieve_pore_31_5`,
        `millfine_sieve_pore_26_5`,
        `millfine_sieve_pore_19_0`,
        `millfine_sieve_pore_16_0`,
        `millfine_sieve_pore_13_2`,
        `millfine_sieve_pore_9_5`,
        `millfine_sieve_pore_4_75`,
        `millfine_sieve_pore_2_36`,
        `millfine_sieve_pore_1_18`,
        `millfine_sieve_pore_0_6`,
        `millfine_sieve_pore_0_3`,
        `millfine_sieve_pore_0_15`,
        `millfine_sieve_pore_0_075`
        )
        values
        <foreach collection="fineMillingList" item="emp" separator=",">
            (#{experimentNum},#{emp.millfine_sieve_pore},#{emp.millfine_sieve_pore_37_5},#{emp.millfine_sieve_pore_31_5},#{emp.millfine_sieve_pore_26_5},#{emp.millfine_sieve_pore_19_0},#{emp.millfine_sieve_pore_16_0},#{emp.millfine_sieve_pore_13_2},#{emp.millfine_sieve_pore_9_5},#{emp.millfine_sieve_pore_4_75},#{emp.millfine_sieve_pore_2_36},#{emp.millfine_sieve_pore_1_18},#{emp.millfine_sieve_pore_0_6},#{emp.millfine_sieve_pore_0_3},#{emp.millfine_sieve_pore_0_15},#{emp.millfine_sieve_pore_0_075})
        </foreach>
    </insert>

    <select id="selectExperimentalProjectMessage" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(
                   QTLR.sampling_date,
                   '%Y-%m-%d'
                       ) AS sampling_date,
               DATE_FORMAT(QTLR.test_date, '%Y-%m-%d') AS test_date,
               DATE_FORMAT(
                   QTLR.report_date,
                   '%Y-%m-%d'
                       ) AS report_date,
               QTLR.*, QTEC.*, QTEID.*,QTTL.materials_name
        FROM
             `quality_test_lab_report` AS QTLR
                 INNER JOIN quality_test_experiment_contrast AS QTEC ON QTLR.order_ticket_num = QTEC.orderTicketNum
                 INNER JOIN quality_test_experiment_ietm_dictionary AS QTEID ON QTEC.experimentId = QTEID.Id
                 INNER JOIN quality_test_task_list AS QTTL ON QTLR.order_ticket_num = QTTL.ticket_num
        WHERE
                QTLR.Id = #{id}
    </select>

    <select id="selectExperimentalMsgByTableName" resultType="java.util.Map">
        SELECT
               TABA.*,
               QTLR.materials_num,
               QTLR.sampling_standard
        FROM
             ${ tableName } AS TABA
                INNER JOIN
                quality_test_lab_report AS QTLR
                ON TABA.experiment_num = QTLR.experiment_num
                WHERE
                TABA.experiment_num = &apos;${experiment_num}&apos;
    </select>

    <delete id="delectExperimentalItemById" >
        DELETE
                QTLR.*,
                QTTL.*,
                QTOT.*,
                QTEC.*,
                QTS.*,
                QTCA.*,
                QTCAS.*,
                QTFA.*,
                QTFAS.*,
                QTA.*,
                QTB.*,
                QTCM.*,
                QTCMB.*,
                QTR.*,
                QTRB.*,
                QTF.*,
                QTE.*,
                QTFM.*,
                QTFMB.*,
                QTMI.*,
                QTMIB.*
        FROM
             quality_test_lab_report AS QTLR
                 INNER JOIN quality_test_task_list AS QTTL ON QTLR.order_ticket_num = QTTL.ticket_num
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_experiment_contrast AS QTEC ON QTLR.order_ticket_num = QTEC.orderTicketNum
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
                 LEFT JOIN quality_test_coarse_aggregate AS QTCA ON QTLR.experiment_num = QTCA.experiment_num
                 LEFT JOIN quality_test_coarse_aggregate_sieving AS QTCAS ON QTLR.experiment_num = QTCAS.experiment_num
                 LEFT JOIN quality_test_fine_aggregate AS QTFA ON QTLR.experiment_num = QTFA.experiment_num
                 LEFT JOIN quality_test_fine_aggregate_sieving AS QTFAS ON QTLR.experiment_num = QTFAS.experiment_num
                 LEFT JOIN quality_test_breeze AS QTB ON QTLR.experiment_num = QTB.experiment_num
                 LEFT JOIN quality_test_asphalt AS QTA ON QTLR.experiment_num = QTA.experiment_num
                 LEFT JOIN quality_test_coarse_milling AS QTCM ON QTLR.experiment_num = QTCM.experiment_num
                 LEFT JOIN quality_test_coarse_milling_burn AS QTCMB ON QTLR.experiment_num = QTCMB.experiment_num
                 LEFT JOIN quality_test_rock AS QTR ON QTLR.experiment_num = QTR.experiment_num
                 LEFT JOIN quality_test_rock_burn AS QTRB ON QTLR.experiment_num = QTRB.experiment_num
                 LEFT JOIN quality_test_fibre AS QTF ON QTLR.experiment_num = QTF.experiment_num
                 LEFT JOIN quality_test_emulsified AS QTE ON QTLR.experiment_num = QTE.experiment_num
                 LEFT JOIN quality_test_fine_milling AS QTFM ON QTLR.experiment_num = QTFM.experiment_num
                 LEFT JOIN quality_test_fine_milling_burn AS QTFMB ON QTLR.experiment_num = QTFMB.experiment_num
                 LEFT JOIN quality_test_mixture AS QTMI ON QTLR.experiment_num = QTMI.experiment_num
                 LEFT JOIN quality_test_mixture_burn AS QTMIB ON QTLR.experiment_num = QTMIB.experiment_num

        WHERE QTLR.Id =  #{id}
    </delete>

    <update id="updateExperimentalApproval" parameterType="java.util.Map">
        update quality_test_lab_report
        SET
        <if test="chargePerson != null" >
            charge_person = #{chargePerson}
        </if>
        <if test="checkPerson != null" >
            check_person = #{checkPerson}
        </if>
        WHERE Id =#{id}
    </update>

    <update id="updateExperimentalItemStateById" parameterType="java.util.Map">
        update quality_test_lab_report
        set experiment_status = #{state}
        where Id = #{id}
    </update>


    <select id="selectSevenDayCoarseBook" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        '粗集料筛分' AS testName,
        QTMD.`name` AS materialName,
        QTOT.test_num AS  testNum,
        (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '磨耗损失') AS coarse_MHSS,
        (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '压碎值') AS coarse_YSZ,
        (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '表观相对密度') AS coarse_BGMD,
        (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '毛体积密度') AS coarse_MTJMD,
        (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '吸水率') AS coarse_XSL,
        (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '针片状颗粒含量') AS coarse_ZPZ,
        ' ' AS sievePore37,
        ' ' AS sievePore31,
        ' ' AS sievePore26,
        QTCA.coarse_sieve_pore_19_0 AS sievePore19,
        QTCA.coarse_sieve_pore_16_0 AS sievePore16,
        QTCA.coarse_sieve_pore_13_2 AS sievePore13,
        QTCA.coarse_sieve_pore_9_5 AS sievePore9,
        QTCA.coarse_sieve_pore_4_75 AS sievePore4,
        QTCA.coarse_sieve_pore_2_36 AS sievePore2,
        QTCA.coarse_sieve_pore_1_18 AS sievePore1,
        QTCA.coarse_sieve_pore_0_6 AS sievePore06,
        QTCA.coarse_sieve_pore_0_3 AS sievePore03,
        QTCA.coarse_sieve_pore_0_15 AS sievePore015,
        QTCA.coarse_sieve_pore_0_15 AS sievePore007,
        QTS.remark
        FROM
        quality_test_lab_report AS QTLR
        LEFT JOIN `quality_test_coarse_aggregate_sieving` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date) AND
        QTLR.materials_num = 2
        GROUP BY testNum
    </select>

    <select id="selectSevenDayFineStandingBook" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        '细集料筛分' AS testName,
        QTMD.`name` AS materialName,
        QTOT.test_num AS  testNum,
        (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '表观相对密度') AS fine_BGMD,
        (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '砂当量') AS fine_SDL,
        (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '毛体积相对密度') AS fine_MTJ,
        (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '吸水率') AS fine_XSL,
        ' ' AS sievePore37,
        ' ' AS sievePore31,
        ' ' AS sievePore26,
        ' ' AS sievePore19,
        ' ' AS sievePore16,
        ' ' AS sievePore13,
        ' ' AS sievePore9,
        QTCA.fine_sieve_pore_4_75 AS sievePore4,
        QTCA.fine_sieve_pore_2_36 AS sievePore2,
        QTCA.fine_sieve_pore_1_18 AS sievePore1,
        QTCA.fine_sieve_pore_0_6 AS sievePore06,
        QTCA.fine_sieve_pore_0_3 AS sievePore03,
        QTCA.fine_sieve_pore_0_15 AS sievePore015,
        ' ' AS sievePore06,
        fine_sieve_pore_0_075 AS sievePore007,
        QTS.remark
        FROM
        quality_test_lab_report AS QTLR
        LEFT JOIN `quality_test_fine_aggregate_sieving` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date) AND
        QTLR.materials_num = 1
        GROUP BY testNum
    </select>

    <select id="selectFineAggregateStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '细集料筛分' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '表观相对密度') AS fine_BGMD,
               (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '砂当量') AS fine_SDL,
               (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '毛体积相对密度') AS fine_MTJ,
               (SELECT fine_result FROM `quality_test_fine_aggregate` WHERE experiment_num = QTLR.experiment_num AND fine_name = '吸水率') AS fine_XSL,
               ' ' AS sievePore37,
               ' ' AS sievePore31,
               ' ' AS sievePore26,
               ' ' AS sievePore19,
               ' ' AS sievePore16,
               ' ' AS sievePore13,
               ' ' AS sievePore9,
               QTCA.fine_sieve_pore_4_75 AS sievePore4,
               QTCA.fine_sieve_pore_2_36 AS sievePore2,
               QTCA.fine_sieve_pore_1_18 AS sievePore1,
               QTCA.fine_sieve_pore_0_6 AS sievePore06,
               QTCA.fine_sieve_pore_0_3 AS sievePore03,
               QTCA.fine_sieve_pore_0_15 AS sievePore015,
               ' ' AS sievePore06,
               fine_sieve_pore_0_075 AS sievePore007,
               QTS.remark
        FROM
             quality_test_lab_report AS QTLR
                 LEFT JOIN `quality_test_fine_aggregate_sieving` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
          <if test="manufacturers != null and manufacturers != 'select'.toString()">
              AND QTS.manufacturers_num = #{manufacturers}
          </if>
           <if test="specification != null and specification != 'select'.toString()">
              AND QTS.specification_num = #{specification}
           </if>
            GROUP BY test_num
    </select>
    <select id="selectCoarseAggregateStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '粗集料筛分' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '磨耗损失') AS coarse_MHSS,
               (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '压碎值') AS coarse_YSZ,
               (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '表观相对密度') AS coarse_BGMD,
               (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '毛体积密度') AS coarse_MTJMD,
               (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '吸水率') AS coarse_XSL,
               (SELECT coarse_result FROM `quality_test_coarse_aggregate` WHERE experiment_num = QTLR.experiment_num AND coarse_name = '针片状颗粒含量') AS coarse_ZPZ,
               ' ' AS sievePore37,
               ' ' AS sievePore31,
               ' ' AS sievePore26,
               QTCA.coarse_sieve_pore_19_0 AS sievePore19,
               QTCA.coarse_sieve_pore_16_0 AS sievePore16,
               QTCA.coarse_sieve_pore_13_2 AS sievePore13,
               QTCA.coarse_sieve_pore_9_5 AS sievePore9,
               QTCA.coarse_sieve_pore_4_75 AS sievePore4,
               QTCA.coarse_sieve_pore_2_36 AS sievePore2,
               QTCA.coarse_sieve_pore_1_18 AS sievePore1,
               QTCA.coarse_sieve_pore_0_6 AS sievePore06,
               QTCA.coarse_sieve_pore_0_3 AS sievePore03,
               QTCA.coarse_sieve_pore_0_15 AS sievePore015,
               QTCA.coarse_sieve_pore_0_15 AS sievePore007,
               QTS.remark
        FROM
             quality_test_lab_report AS QTLR
                 LEFT JOIN `quality_test_coarse_aggregate_sieving` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
            <if test="manufacturers != null and manufacturers != 'select'.toString()">
                AND QTS.manufacturers_num = #{manufacturers}
            </if>
            <if test="specification != null and specification != 'select'.toString()">
                AND QTS.specification_num = #{specification}
            </if>
        GROUP BY test_num
    </select>
    <select id="selectBreezeBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '表观相对密度') AS breeze_BGMD,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '毛体积密度') AS breeze_MTJ,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '吸水率') AS breeze_HSL,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '亲水系数') AS breeze_QSXS,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '塑性指数') AS breeze_SXZS,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.6mm') AS breeze_LDFW06,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.15mm') AS breeze_LDFW015,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.075mm') AS breeze_LDFW075,
               (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.3mm') AS breeze_LDFW03,
               QTS.remark
        FROM
             `quality_test_breeze` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
            WHERE
                    QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
              AND
                    QTLR.materials_num = #{materials}
            <if test="manufacturers != null and manufacturers != 'select'.toString()">
                AND QTS.manufacturers_num = #{manufacturers}
            </if>
            <if test="specification != null and specification != 'select'.toString()">
                AND QTS.specification_num = #{specification}
            </if>
            GROUP BY test_num
    </select>
    <select id="selectAsphaltStandingByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '25℃针入度') AS asphalt_ZRD,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '15℃ 延度') AS asphalt_YD15,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '软化点R&amp;B') AS asphalt_RHD,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '质量变化') AS asphalt_ZLBH,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '25℃针入度') AS asphalt_CLZRD25,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '10℃延度') AS asphalt_YD10,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留针入度比(10℃)') AS asphalt_CLZRD10,
               (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留针入度比(16℃)') AS asphalt_CLZRD16,
               QTS.remark
        FROM
             `quality_test_asphalt` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
            <if test="manufacturers != null and manufacturers != 'select'.toString()">
                AND QTS.manufacturers_num = #{manufacturers}
            </if>
            <if test="specification != null and specification != 'select'.toString()">
                AND QTS.specification_num = #{specification}
            </if>
        GROUP BY test_num
    </select>
    <select id="selectCoarseMillingStandingByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '粗铣刨料' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT mill_result FROM `quality_test_coarse_milling` WHERE experiment_num = QTLR.experiment_num AND mill_name = '含量') AS mill_HL,
               (SELECT mill_result FROM `quality_test_coarse_milling` WHERE experiment_num = QTLR.experiment_num AND mill_name = '表观相对密度') AS mill_BGXDMD,
               (SELECT mill_result FROM `quality_test_coarse_milling` WHERE experiment_num = QTLR.experiment_num AND mill_name = '毛体积密度') AS mill_MTJMD,
               (SELECT mill_result FROM `quality_test_coarse_milling` WHERE experiment_num = QTLR.experiment_num AND mill_name = '吸水率') AS mill_XSL,
               (SELECT mill_result FROM `quality_test_coarse_milling` WHERE experiment_num = QTLR.experiment_num AND mill_name = '针片状') AS mill_ZPZ,
               (SELECT mill_result FROM `quality_test_coarse_milling` WHERE experiment_num = QTLR.experiment_num AND mill_name = '压碎值') AS mill_YSZ,
               QTCA.mill_sieve_pore_37_5 AS sievePore37,
               QTCA.mill_sieve_pore_31_5 AS sievePore31,
               QTCA.mill_sieve_pore_26_5 AS sievePore26,
               QTCA.mill_sieve_pore_19_0 AS sievePore19,
               QTCA.mill_sieve_pore_16_0 AS sievePore16,
               QTCA.mill_sieve_pore_13_2 AS sievePore13,
               QTCA.mill_sieve_pore_9_5 AS sievePore9,
               QTCA.mill_sieve_pore_4_75 AS sievePore4,
               QTCA.mill_sieve_pore_2_36 AS sievePore2,
               QTCA.mill_sieve_pore_1_18 AS sievePore1,
               QTCA.mill_sieve_pore_0_6 AS sievePore06,
               QTCA.mill_sieve_pore_0_3 AS sievePore03,
               QTCA.mill_sieve_pore_0_15 AS sievePore015,
               QTCA.mill_sieve_pore_0_15 AS sievePore007,
               QTS.remark
        FROM
             quality_test_lab_report AS QTLR
                 LEFT JOIN `quality_test_coarse_milling_burn` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
        <if test="manufacturers != null and manufacturers != 'select'.toString()">
            AND QTS.manufacturers_num = #{manufacturers}
        </if>
        <if test="specification != null and specification != 'select'.toString()">
            AND QTS.specification_num = #{specification}
        </if>
        GROUP BY test_num
    </select>
    <select id="selectRockStandingByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '岩沥青' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT rock_result FROM `quality_test_rock` WHERE experiment_num = QTLR.experiment_num AND rock_name = '油石比') AS rock_YSB,
               (SELECT rock_result FROM `quality_test_rock` WHERE experiment_num = QTLR.experiment_num AND rock_name = '石料表观相对密度') AS rock_BGXDMD,
               (SELECT rock_result FROM `quality_test_rock` WHERE experiment_num = QTLR.experiment_num AND rock_name = '石料毛体积相对密度') AS rock_MTJMD,
               (SELECT rock_result FROM `quality_test_rock` WHERE experiment_num = QTLR.experiment_num AND rock_name = '吸水率') AS rock_XSL,
               (SELECT rock_result FROM `quality_test_rock` WHERE experiment_num = QTLR.experiment_num AND rock_name = '沥青密度') AS rock_LQMD,
               QTCA.rock_sieve_pore_37_5 AS sievePore37,
               QTCA.rock_sieve_pore_31_5 AS sievePore31,
               QTCA.rock_sieve_pore_26_5 AS sievePore26,
               QTCA.rock_sieve_pore_19_0 AS sievePore19,
               QTCA.rock_sieve_pore_16_0 AS sievePore16,
               QTCA.rock_sieve_pore_13_2 AS sievePore13,
               QTCA.rock_sieve_pore_9_5 AS sievePore9,
               QTCA.rock_sieve_pore_4_75 AS sievePore4,
               QTCA.rock_sieve_pore_2_36 AS sievePore2,
               QTCA.rock_sieve_pore_1_18 AS sievePore1,
               QTCA.rock_sieve_pore_0_6 AS sievePore06,
               QTCA.rock_sieve_pore_0_3 AS sievePore03,
               QTCA.rock_sieve_pore_0_15 AS sievePore015,
               QTCA.rock_sieve_pore_0_15 AS sievePore007,
               QTS.remark
        FROM
             quality_test_lab_report AS QTLR
                 LEFT JOIN `quality_test_rock_burn` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
        <if test="manufacturers != null and manufacturers != 'select'.toString()">
            AND QTS.manufacturers_num = #{manufacturers}
        </if>
        <if test="specification != null and specification != 'select'.toString()">
            AND QTS.specification_num = #{specification}
        </if>
        GROUP BY test_num
    </select>
    <select id="selectFibreStandingByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT fibre_result FROM `quality_test_fibre` WHERE experiment_num = QTLR.experiment_num AND fibre_name = '纤维长度') AS fibre_XWCD,
               (SELECT fibre_result FROM `quality_test_fibre` WHERE experiment_num = QTLR.experiment_num AND fibre_name = '灰分含量') AS fibre_HFHL,
               (SELECT fibre_result FROM `quality_test_fibre` WHERE experiment_num = QTLR.experiment_num AND fibre_name = 'PH值') AS fibre_PHZ,
               (SELECT fibre_result FROM `quality_test_fibre` WHERE experiment_num = QTLR.experiment_num AND fibre_name = '吸油率') AS fibre_XYL,
               (SELECT fibre_result FROM `quality_test_fibre` WHERE experiment_num = QTLR.experiment_num AND fibre_name = '含水率') AS fibre_HSL,
               QTS.remark
        FROM
             `quality_test_fibre` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
        <if test="manufacturers != null and manufacturers != 'select'.toString()">
            AND QTS.manufacturers_num = #{manufacturers}
        </if>
        <if test="specification != null and specification != 'select'.toString()">
            AND QTS.specification_num = #{specification}
        </if>
        GROUP BY test_num
    </select>
    <select id="selectEmulsifiedStandingByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT emulsified_result FROM `quality_test_emulsified` WHERE experiment_num = QTLR.experiment_num AND emulsified_name = '粘度') AS emulsified_ZD,
               (SELECT emulsified_result FROM `quality_test_emulsified` WHERE experiment_num = QTLR.experiment_num AND emulsified_name = '蒸发残留物含量') AS emulsified_ZFCLW,
               (SELECT emulsified_result FROM `quality_test_emulsified` WHERE experiment_num = QTLR.experiment_num AND emulsified_name = '针入度') AS emulsified_ZRD,
               (SELECT emulsified_result FROM `quality_test_emulsified` WHERE experiment_num = QTLR.experiment_num AND emulsified_name = '延度') AS emulsified_YD,
               QTS.remark
        FROM
             `quality_test_emulsified` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
        <if test="manufacturers != null and manufacturers != 'select'.toString()">
            AND QTS.manufacturers_num = #{manufacturers}
        </if>
        <if test="specification != null and specification != 'select'.toString()">
            AND QTS.specification_num = #{specification}
        </if>
        GROUP BY test_num
    </select>
    <select id="selectMixtureStandingByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '沥青混合料' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '油石比') AS mixture_HL,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '最大理论密度') AS mixture_ZDLLMD,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '稳定度') AS mixture_WDD,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '流值') AS mixture_LZ,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '残留') AS mixture_CL,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '冻融') AS mixture_DW,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '动稳定度') AS mixture_DWDD,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '渗水系数') AS mixture_SSXS,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '构造深度') AS mixture_GZSD,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '飞散') AS mixture_FS,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '析漏') AS mixture_XL,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '毛体积相对密度') AS mixture_MTJXDMD,
               (SELECT mixture_result FROM `quality_test_mixture` WHERE experiment_num = QTLR.experiment_num AND mixture_name = '吸水率') AS mixture_XSL,
               QTCA.mixture_sieve_pore_37_5 AS sievePore37,
               QTCA.mixture_sieve_pore_31_5 AS sievePore31,
               QTCA.mixture_sieve_pore_26_5 AS sievePore26,
               QTCA.mixture_sieve_pore_19_0 AS sievePore19,
               QTCA.mixture_sieve_pore_16_0 AS sievePore16,
               QTCA.mixture_sieve_pore_13_2 AS sievePore13,
               QTCA.mixture_sieve_pore_9_5 AS sievePore9,
               QTCA.mixture_sieve_pore_4_75 AS sievePore4,
               QTCA.mixture_sieve_pore_2_36 AS sievePore2,
               QTCA.mixture_sieve_pore_1_18 AS sievePore1,
               QTCA.mixture_sieve_pore_0_6 AS sievePore06,
               QTCA.mixture_sieve_pore_0_3 AS sievePore03,
               QTCA.mixture_sieve_pore_0_15 AS sievePore015,
               QTCA.mixture_sieve_pore_0_15 AS sievePore007,
               QTS.remark
        FROM
             quality_test_lab_report AS QTLR
                 LEFT JOIN `quality_test_mixture_burn` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
        <if test="manufacturers != null and manufacturers != 'select'.toString()">
            AND QTS.manufacturers_num = #{manufacturers}
        </if>
        <if test="specification != null and specification != 'select'.toString()">
            AND QTS.specification_num = #{specification}
        </if>
        GROUP BY test_num
    </select>
    <select id="selectFineMillingStandingByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '细铣刨料' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               (SELECT millfine_result FROM `quality_test_fine_milling` WHERE experiment_num = QTLR.experiment_num AND millfine_name = '含量') AS millfine_HL,
               (SELECT millfine_result FROM `quality_test_fine_milling` WHERE experiment_num = QTLR.experiment_num AND millfine_name = '表观相对密度') AS millfine_BGXDMD,
               (SELECT millfine_result FROM `quality_test_fine_milling` WHERE experiment_num = QTLR.experiment_num AND millfine_name = '毛体积密度') AS millfine_MTJMD,
               (SELECT millfine_result FROM `quality_test_fine_milling` WHERE experiment_num = QTLR.experiment_num AND millfine_name = '吸水率') AS millfine_XSL,
               (SELECT millfine_result FROM `quality_test_fine_milling` WHERE experiment_num = QTLR.experiment_num AND millfine_name = '砂当量') AS millfine_ZPZ,
               QTCA.millfine_sieve_pore_37_5 AS sievePore37,
               QTCA.millfine_sieve_pore_31_5 AS sievePore31,
               QTCA.millfine_sieve_pore_26_5 AS sievePore26,
               QTCA.millfine_sieve_pore_19_0 AS sievePore19,
               QTCA.millfine_sieve_pore_16_0 AS sievePore16,
               QTCA.millfine_sieve_pore_13_2 AS sievePore13,
               QTCA.millfine_sieve_pore_9_5 AS sievePore9,
               QTCA.millfine_sieve_pore_4_75 AS sievePore4,
               QTCA.millfine_sieve_pore_2_36 AS sievePore2,
               QTCA.millfine_sieve_pore_1_18 AS sievePore1,
               QTCA.millfine_sieve_pore_0_6 AS sievePore06,
               QTCA.millfine_sieve_pore_0_3 AS sievePore03,
               QTCA.millfine_sieve_pore_0_15 AS sievePore015,
               QTCA.millfine_sieve_pore_0_15 AS sievePore007,
               QTS.remark
        FROM
             quality_test_lab_report AS QTLR
                 LEFT JOIN `quality_test_fine_milling_burn` AS QTCA  ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.sampling_date BETWEEN #{startDate} AND #{endDate}
          AND
                QTLR.materials_num = #{materials}
        <if test="manufacturers != null and manufacturers != 'select'.toString()">
            AND QTS.manufacturers_num = #{manufacturers}
        </if>
        <if test="specification != null and specification != 'select'.toString()">
            AND QTS.specification_num = #{specification}
        </if>
        GROUP BY test_num
    </select>
    

    <select id="getSevenDayBreezeStandingBook" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        QTMD.`name` AS materialName,
        QTOT.test_num AS  testNum,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '表观相对密度') AS breeze_BGMD,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '毛体积密度') AS breeze_MTJ,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '吸水率') AS breeze_HSL,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '亲水系数') AS breeze_QSXS,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '塑性指数') AS breeze_SXZS,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.6mm') AS breeze_LDFW06,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.15mm') AS breeze_LDFW015,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.075mm') AS breeze_LDFW075,
        (SELECT breeze_result FROM `quality_test_breeze` WHERE experiment_num = QTLR.experiment_num AND breeze_name = '0.3mm') AS breeze_LDFW03,
        QTS.remark
        FROM
        `quality_test_breeze` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id

        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date)
        GROUP BY testNum
    </select>
    <select id="getSevenDayAsphaltStandingBookTatle" resultType="java.util.Map">
        SELECT
        QTCA.asphalt_name AS asphaltName,
        QTEID.remake AS remake
        FROM
        `quality_test_asphalt` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_experiment_ietm_dictionary AS QTEID ON QTCA.asphalt_name = QTEID.`name`
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(QTLR.test_date)
        GROUP BY
        QTCA.asphalt_name
    </select>

    <select id="getSevenDayAsphaltStandingBook" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        QTMD.`name` AS materialName,
        QTOT.test_num AS  testNum,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '25℃针入度') AS asphalt_25ZRD,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '延  度 15℃') AS asphalt_YD15,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '软化点 TR&amp;B') AS asphalt_RHD,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '质量变化') AS asphalt_ZLBH,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '25℃残留针入度比') AS asphalt_25CLZRD,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '延  度 10℃') AS asphalt_YD10,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留针入度比(10℃)') AS asphalt_CLZRD10,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留针入度比(16℃)') AS asphalt_CLZRD16,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '延  度 5℃') AS asphalt_YD5,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '延  度 25℃') AS asphalt_YD25,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留延度5℃') AS asphalt_CLYD5,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留延度10℃') AS asphalt_CLYD10,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留延度15℃') AS asphalt_CLYD15,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留延度25℃') AS asphalt_CLYD25,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '针入度(100g,5s)5℃') AS asphalt_ZRD5,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '针入度(100g,5s)30℃') AS asphalt_ZRD30,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '针入度(100g,5s)10℃') AS asphalt_ZRD10,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '针入度(100g,5s)25℃') AS asphalt_ZRD25,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '质量损失') AS asphalt_ZLSS,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '残留针入度比') AS asphalt_CLZRDB,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '弹性恢复25℃') AS asphalt_TXHF25,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '闪  点 （COC）') AS asphalt_SD,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '溶解度（三氯乙烯）') AS asphalt_RJD,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '沥青相对密度25℃') AS asphalt_XDMD25,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '沥青动力黏度试验') AS asphalt_DLND,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '沥青旋转粘度试验') AS asphalt_XZND,
        (SELECT asphalt_result FROM `quality_test_asphalt` WHERE experiment_num = QTLR.experiment_num AND asphalt_name = '沥青旋转粘度试验（布氏）') AS asphalt_BSXZND,
        QTS.remark
        FROM
        `quality_test_asphalt` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id

        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date)
        GROUP BY testNum
    </select>
    <select id="selectCoarseStandingBook" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        QTMD.`name` AS materialName,
        QTCA.coarse_name AS testName,
        QTOT.test_num AS  testNum,
        QTCA.coarse_result AS testResult ,
#         QTCA.coarse_exper_result10_20 AS testResult10_20 ,
#         QTCA.coarse_result10_15 AS testResultt10_15 ,
#         QTCA.coarse_result5_10 AS testResult5_10 ,
        QTS.remark
        FROM
        `quality_test_coarse_aggregate` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date)
    </select>




    <select id="selectCoarseSievingStandingBook" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        '粗集料筛分' AS testName,
        QTMD.`name` AS materialName,
        QTOT.test_num AS  testNum,
        ' ' AS sievePore37,
        ' ' AS sievePore31,
        ' ' AS sievePore26,
        QTCA.coarse_sieve_pore_19_0 AS sievePore19,
        QTCA.coarse_sieve_pore_16_0 AS sievePore16,
        QTCA.coarse_sieve_pore_13_2 AS sievePore13,
        QTCA.coarse_sieve_pore_9_5 AS sievePore9,
        QTCA.coarse_sieve_pore_4_75 AS sievePore4,
        QTCA.coarse_sieve_pore_2_36 AS sievePore2,
        QTCA.coarse_sieve_pore_1_18 AS sievePore1,
        QTCA.coarse_sieve_pore_0_6 AS sievePore06,
        QTCA.coarse_sieve_pore_0_3 AS sievePore03,
        QTCA.coarse_sieve_pore_0_15 AS sievePore015,
        QTCA.coarse_sieve_pore_0_15 AS sievePore007,
        QTS.remark
        FROM
        `quality_test_coarse_aggregate_sieving` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date)
    </select>

    <select id="selectFineStandingBook" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        QTMD.`name` AS materialName,
        QTCA.fine_name AS testName,
        QTOT.test_num AS  testNum,
        QTCA.fine_result  AS testResult,
        QTS.remark
        FROM
        `quality_test_fine_aggregate` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date)
    </select>

    <select id="selectFineievingStandingBook" resultType="java.util.Map">
            SELECT
                   DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
            QTLR.sampling_standard AS samplingStandard,
            '细集料筛分' AS testName,
            QTMD.`name` AS materialName,
            QTOT.test_num AS  testNum,
            ' ' AS sievePore37,
            ' ' AS sievePore31,
            ' ' AS sievePore26,
            ' ' AS sievePore19,
            ' ' AS sievePore16,
            ' ' AS sievePore13,
            ' ' AS sievePore9,
            QTCA.fine_sieve_pore_4_75 AS sievePore4,
            QTCA.fine_sieve_pore_2_36 AS sievePore2,
            QTCA.fine_sieve_pore_1_18 AS sievePore1,
            QTCA.fine_sieve_pore_0_6 AS sievePore06,
            QTCA.fine_sieve_pore_0_3 AS sievePore03,
            QTCA.fine_sieve_pore_0_15 AS sievePore015,
            ' ' AS sievePore06,
            fine_sieve_pore_0_075 AS sievePore007,
            QTS.remark
            FROM
            `quality_test_fine_aggregate_sieving` AS QTCA
            INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
            INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
            INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
            INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
            WHERE
            DATE_SUB(CURDATE(), INTERVAL 7 DAY)   &lt;= date(QTLR.test_date)
    </select>

    <select id="selectAsphaltStandingBook" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        QTMD.`name` AS materialName,
        QTCA.asphalt_name AS testName,
        QTOT.test_num AS  testNum,
        QTCA.asphalt_result  AS testResult,
               QTLR.manufacturers_name AS manufacturersName,
        QTS.remark
        FROM
        `quality_test_asphalt` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)   &lt;= date(QTLR.test_date)
    </select>
    <select id="selectCoarseStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTCA.coarse_name AS testName,
               QTOT.test_num AS  testNum,
               QTCA.coarse_result AS testResult ,
               QTCA.coarse_exper_result10_20 AS testResult10_20 ,
               QTCA.coarse_result10_15 AS testResultt10_15 ,
               QTCA.coarse_result5_10 AS testResult5_10 ,
               QTS.remark
        FROM
             `quality_test_coarse_aggregate` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.test_date between #{startDate} and #{endDate};
    </select>

    <select id="selectCoarseSievingStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '粗集料筛分' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               ' ' AS sievePore37,
               ' ' AS sievePore31,
               ' ' AS sievePore26,
               QTCA.coarse_sieve_pore_19_0 AS sievePore19,
               QTCA.coarse_sieve_pore_16_0 AS sievePore16,
               QTCA.coarse_sieve_pore_13_2 AS sievePore13,
               QTCA.coarse_sieve_pore_9_5 AS sievePore9,
               QTCA.coarse_sieve_pore_4_75 AS sievePore4,
               QTCA.coarse_sieve_pore_2_36 AS sievePore2,
               QTCA.coarse_sieve_pore_1_18 AS sievePore1,
               QTCA.coarse_sieve_pore_0_6 AS sievePore06,
               QTCA.coarse_sieve_pore_0_3 AS sievePore03,
               QTCA.coarse_sieve_pore_0_15 AS sievePore015,
               QTCA.coarse_sieve_pore_0_15 AS sievePore007,
               QTS.remark
        FROM
             `quality_test_coarse_aggregate_sieving` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.test_date between #{startDate} and #{endDate};
    </select>

    <select id="selectFineStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTCA.fine_name AS testName,
               QTOT.test_num AS  testNum,
               QTCA.fine_result  AS testResult,
               QTS.remark
        FROM
             `quality_test_fine_aggregate` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.test_date between #{startDate} and #{endDate};
    </select>

    <select id="selectFineievingStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               '细集料筛分' AS testName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS  testNum,
               ' ' AS sievePore37,
               ' ' AS sievePore31,
               ' ' AS sievePore26,
               ' ' AS sievePore19,
               ' ' AS sievePore16,
               ' ' AS sievePore13,
               ' ' AS sievePore9,
               QTCA.fine_sieve_pore_4_75 AS sievePore4,
               QTCA.fine_sieve_pore_2_36 AS sievePore2,
               QTCA.fine_sieve_pore_1_18 AS sievePore1,
               QTCA.fine_sieve_pore_0_6 AS sievePore06,
               QTCA.fine_sieve_pore_0_3 AS sievePore03,
               QTCA.fine_sieve_pore_0_15 AS sievePore015,
               ' ' AS sievePore06,
               fine_sieve_pore_0_075 AS sievePore007,
               QTS.remark
        FROM
             `quality_test_fine_aggregate_sieving` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.test_date between #{startDate} and #{endDate};
    </select>

    <select id="selectAsphaltStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d') AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTCA.asphalt_name AS testName,
               QTOT.test_num AS  testNum,
               QTCA.asphalt_result  AS testResult,
               QTLR.manufacturers_name AS manufacturersName,
               QTS.remark
        FROM
             `quality_test_asphalt` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.test_date between #{startDate} and #{endDate};
    </select>

    <update id="updateOrderTicketByOrderTicketNum" useGeneratedKeys="true">
        UPDATE quality_test_order_ticket SET `status` = 1 WHERE order_ticket_num = #{orderTicketNum}
    </update>
    <select id="selectSpecificationDataAndManufacturersData" resultType="java.util.Map">
        SELECT
               'specification' AS marks,
               Id,
               `name`
        FROM
             quality_test_specification_dictionary
        UNION ALL
        SELECT
               'manufacturers' AS marks,
               Id,
               `name`
        FROM
             quality_test_manufacturers_dictionaries
    </select>
    <delete id="delectSpecificationById" >
        delete  from quality_test_specification_dictionary WHERE Id = #{id};
    </delete>
    <delete id="delectManufacturersById" >
        delete  from quality_test_manufacturers_dictionaries WHERE Id = #{id};
    </delete>
    <insert id="insertSpecification" useGeneratedKeys="true">
        INSERT INTO quality_test_specification_dictionary (`name`)
        VALUES
               (#{specificationName})
    </insert>
    <insert id="insertManufacturers" useGeneratedKeys="true">
        INSERT INTO quality_test_manufacturers_dictionaries (`name`)
        VALUES
               (#{manufacturersName})
    </insert>
    <select id="selectSpecificationById" resultType="java.util.Map">
        select 'specification' as marks, Id,`name` from quality_test_specification_dictionary where Id = #{id}
    </select>
    <select id="selectManufacturersById" resultType="java.util.Map">
        select 'manufacturers' as marks, Id,`name` from quality_test_manufacturers_dictionaries where Id = #{id}
    </select>
    <update id="updateSpecificationById" useGeneratedKeys="true">
        update quality_test_specification_dictionary set `name` = #{name} where Id = #{id}
    </update>
    <update id="updateManufacturersById" useGeneratedKeys="true">
        update quality_test_manufacturers_dictionaries set `name` = #{name} where Id = #{id}
    </update>
    <insert id="insertBrzzez" useGeneratedKeys="true">
        INSERT INTO quality_test_breeze (
        experiment_num,
        breeze_name,
        breeze_requirements,
        breeze_result,
        breeze_method
        )
        values
        <foreach collection="list" item="emp" separator=",">
            (#{experimentNum},#{emp.breeze_name},#{emp.breeze_requirements},#{emp.breeze_result},#{emp.breeze_method})
        </foreach>
    </insert>
    <select id="selectBreezeStandingBook" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
        QTLR.sampling_standard AS samplingStandard,
        QTMD.`name` AS materialName,
        QTCA.breeze_name AS testName,
        QTOT.test_num AS  testNum,
        QTCA.breeze_result  AS testResult,
        QTS.remark
        FROM
        `quality_test_breeze` AS QTCA
        INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
        INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date)
    </select>
    <select id="selectBreezeStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.test_date,'%Y-%m-%d')AS testDate,
               QTLR.sampling_standard AS samplingStandard,
               QTMD.`name` AS materialName,
               QTCA.breeze_name AS testName,
               QTOT.test_num AS  testNum,
               QTCA.breeze_result  AS testResult,
               QTS.remark
        FROM
             `quality_test_breeze` AS QTCA
                 INNER JOIN quality_test_lab_report AS QTLR ON QTCA.experiment_num = QTLR.experiment_num
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTLR.order_ticket_num = QTOT.order_ticket_num
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
        WHERE
                QTLR.test_date between #{startDate} and #{endDate};
    </select>
    <select id="selectSampleStatusById" resultType="java.util.Map">
        SELECT * FROM `quality_test_samplingPage` WHERE Id = #{id};
    </select>
    <select id="selectTestStandingBook" resultType="java.util.Map">
        SELECT
        DATE_FORMAT( QTLR.test_date,'%Y-%m-%d')  AS testDate,
        QTOT.order_ticket_num AS orderTicketNum,
        QTSD.`name` AS specificationName,
        QTMD.`name` AS materialName,
        QTOT.test_num AS testNum,
        QTLR.required_experimental AS requiredExperimental,
        QTS.remark
        FROM
        quality_test_samplingPage AS QTS
        INNER JOIN quality_test_specification_dictionary AS QTSD ON QTS.specification_num = QTSD.Id
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTS.materials_num = QTMD.Id
        INNER JOIN quality_test_order_ticket AS QTOT ON QTS.Id = QTOT.sampling_id
        INNER JOIN quality_test_lab_report AS QTLR ON QTOT.order_ticket_num = QTLR.order_ticket_num
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY)  &lt;= date(QTLR.test_date)
    </select>

    <select id="selectTestStandingBookByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT( QTLR.test_date,'%Y-%m-%d')  AS testDate,
               QTOT.order_ticket_num AS orderTicketNum,
               QTSD.`name` AS specificationName,
               QTMD.`name` AS materialName,
               QTOT.test_num AS testNum,
               QTLR.required_experimental AS requiredExperimental,
               QTS.remark
        FROM
             quality_test_samplingPage AS QTS
                 INNER JOIN quality_test_specification_dictionary AS QTSD ON QTS.specification_num = QTSD.Id
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTS.materials_num = QTMD.Id
                 INNER JOIN quality_test_order_ticket AS QTOT ON QTS.Id = QTOT.sampling_id
                 INNER JOIN quality_test_lab_report AS QTLR ON QTOT.order_ticket_num = QTLR.order_ticket_num
        WHERE
                QTLR.test_date between #{startDate} and #{endDate};
    </select>
    <select id="selectMobileUnfinishedExperimental" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.sampling_date,'%Y-%m-%d') AS sampling_date,
               DATE_FORMAT(QTLR.test_date, '%Y-%m-%d') AS test_date,
               QTLR.*,
               QTMD.`name` AS materials_name
        FROM
             `quality_test_lab_report` AS QTLR
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        WHERE QTLR.experiment_status = 0
        ORDER BY QTLR.experiment_status,QTLR.test_date DESC;
    </select>
    <select id="selectLastWeekExperimentHistory" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(QTLR.sampling_date,'%Y-%m-%d') AS sampling_date,
        DATE_FORMAT(QTLR.test_date, '%Y-%m-%d') AS test_date,
        QTLR.*,
        QTMD.`name` AS materials_name
        FROM
        `quality_test_lab_report` AS QTLR
        INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        WHERE QTLR.experiment_status != 0
        AND DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(QTLR.test_date)
        ORDER BY QTLR.experiment_status,QTLR.test_date DESC;
    </select>
    <select id="selectMobileExperimentByDate" resultType="java.util.Map">
        SELECT
               DATE_FORMAT(QTLR.sampling_date,'%Y-%m-%d') AS sampling_date,
               DATE_FORMAT(QTLR.test_date, '%Y-%m-%d') AS test_date,
               QTLR.*,
               QTMD.`name` AS materials_name
        FROM
             `quality_test_lab_report` AS QTLR
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTLR.materials_num = QTMD.Id
        WHERE QTLR.test_date = #{startDate}
        ORDER BY QTLR.experiment_status,QTLR.test_date DESC;
    </select>
    <select id="selectOrderTicketCountByDateAndLogogramName" resultType="java.util.Map">

        SELECT
               count(QTOT.Id) AS counts
        FROM
             quality_test_order_ticket AS QTOT
                 INNER JOIN quality_test_samplingPage AS QTS ON QTOT.sampling_id = QTS.Id
                 INNER JOIN quality_test_material_dictionary AS QTMD ON QTS.materials_num = QTMD.Id
        WHERE
                QTMD.logogram_name = #{logogramName}
          AND
                date_format(QTOT.creat_time, '%Y') = #{year};
    </select>

    <select id="selectMaterials" resultType="java.util.Map">
        SELECT Id,`name` FROM `quality_test_material_dictionary`;
    </select>
    <select id="selectManufacturers" resultType="java.util.Map">
        SELECT Id,`name` FROM `quality_test_manufacturers_dictionaries`;
    </select>
    <insert id="insertMaterialsAndManufacturers" useGeneratedKeys="true" parameterType="java.util.Map">
        <selectKey resultType ="java.lang.Integer" keyProperty= "id"
                   order= "AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey >
        insert into quality_test_materials_intermediate
        (materials_id, manufacturers_id)
        values
        <foreach collection ="list" item="reddemCode" index= "index" separator =",">
            (
            #{reddemCode.materialsId}, #{reddemCode.checkId}
            )
        </foreach >
    </insert>

    <select id="selectMaterialsMatchupManufacturers" resultType="java.util.Map" >
        SELECT
               QTMI.Id,
               QTMD.`name` AS materialName,
               QTMDC.`name` AS manufacturersName
        FROM
             quality_test_materials_intermediate AS QTMI
                 INNER JOIN quality_test_material_dictionary AS QTMD
                     ON QTMI.materials_id = QTMD.Id
                 INNER JOIN quality_test_manufacturers_dictionaries AS QTMDC
                     ON QTMI.manufacturers_id = QTMDC.Id
    </select>

    <delete id="deleteMaterialAndManufacturersById" >
        DELETE  FROM quality_test_materials_intermediate WHERE Id = #{id}
    </delete>
    <select id="selectManufacturersByMaterials" resultType="java.util.Map">
        SELECT
               QTMD.Id AS id,
               QTMD.`name` AS `name`
        FROM
             `quality_test_materials_intermediate` AS QTMI
                 INNER JOIN quality_test_manufacturers_dictionaries AS QTMD
                     ON QTMI.manufacturers_id = QTMD.Id
        WHERE
                QTMI.materials_id = #{id};
    </select>
    <select id="selectSpecification" resultType="java.util.Map">
        SELECT
               QTS.specification_num,
               QTSD.`name` AS specification_name
        FROM
             `quality_test_samplingPage` AS QTS
                 INNER JOIN quality_test_specification_dictionary AS QTSD
                     ON QTS.specification_num = QTSD.Id
        WHERE
                QTS.creat_time BETWEEN #{startDate} AND #{endDate}
          AND QTS.materials_num = #{materials}
        GROUP BY QTS.specification_num
    </select>

    <select id="selectManufacturersByMaterialsAndDate" resultType="java.util.Map">
        SELECT
               QTS.manufacturers_num,
               QTMD.`name` AS manufacturers_name
        FROM
             `quality_test_samplingPage` AS QTS
                 INNER JOIN quality_test_manufacturers_dictionaries AS QTMD
                     ON QTS.manufacturers_num = QTMD.Id
        WHERE
                QTS.creat_time BETWEEN #{startDate} AND #{endDate}
          AND QTS.materials_num = #{materials}
        GROUP BY QTS.manufacturers_num
    </select>
</mapper>
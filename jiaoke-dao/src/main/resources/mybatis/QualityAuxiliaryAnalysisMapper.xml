<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.quality.dao.QualityAuxiliaryAnalysisDao">

    <select id="selelectWarningLiveDataToList" resultType="java.util.Map">
        SELECT
        t1.id,
        date_format(t1.produce_date, '%Y-%m-%d') AS produce_date,
        date_format(t1.produce_time, '%H:%i:%s') AS produce_time,
        t1.produce_ratio_id,
        t1.pro_name,
        t1.produce_car_num,
        t1.produce_disc_num,
        t1.produce_user,
        t1.produce_custom_num,
        t1.produce_crewNum,
        t1.max_warning_level
        FROM
        quality_warning_promessage_crew t1
        WHERE
        <if test="startDate == '' and endDate == ''">
            DATE_SUB(CURDATE(), INTERVAL 3 DAY) &lt;= produce_date
        </if>
        <if test="startDate != '' and endDate != ''">
            produce_date BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="crew != null">
            <if test="crew == 'data1'">
                AND produce_crewNum  = 1
            </if>
            <if test="crew == 'data2'">
                AND produce_crewNum  = 2
            </if>
        </if>
        <if test="rationId != null and rationId != 'select'">
            AND produce_ratio_id = #{rationId}
        </if>
        AND max_warning_level = #{warningLive}
        LIMIT #{pageFirstNum},#{eachPageDataNum};
    </select>

    <select id="selelectCountWarningLive" resultType="int">
        SELECT
        COUNT(t1.id)
        FROM
        quality_warning_promessage_crew t1
        WHERE
        <if test="startDate == '' and endDate == ''">
            DATE_SUB(CURDATE(), INTERVAL 3 DAY) &lt;= produce_date
        </if>
        <if test="startDate != '' and endDate != ''">
            produce_date BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="crew != null">
            <if test="crew == 'data1'">
                AND produce_crewNum  = 1
            </if>
            <if test="crew == 'data2'">
                AND produce_crewNum  = 2
            </if>
        </if>
        <if test="rationId != null and rationId != 'select'">
            AND produce_ratio_id = #{rationId}
        </if>
        AND max_warning_level = #{warningLive};
    </select>
    <select id="selectWaringData" resultType="java.util.Map">
        SELECT * FROM quality_warning_data WHERE crew_id in
       <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
            #{item}
       </foreach>
    </select>

    <select id="getProMessageByDate" resultType="java.util.Map">
        SELECT
        QD.*,
        QM.pro_name
        FROM
        quality_monitoring_realtime_${crewNum} AS QD
        INNER JOIN
        quality_proportioning_message AS QM
        <choose>
            <when test="crewNum == 'data1'">
                ON QD.produce_proportioning_num = QM.crew1_modele_id
            </when>
            <otherwise>
                ON QD.produce_proportioning_num = QM.crew2_modele_id
            </otherwise>
        </choose>
        INNER JOIN quality_proportioning_model AS QMD
        ON QM.id = QMD.message_id
        WHERE
        QD.produce_date = DATE(&apos;${prodate}&apos;)
        AND YEAR(QMD.create_time) = YEAR(&apos;${prodate}&apos;)
        AND QD.produce_disc_num = ${discNum}
    </select>

    <select id="getWaringList" resultType="java.util.Map">
        SELECT * from quality_warning_data WHERE crew_id = #{producedId}
    </select>

    <select id="selectRealTimeDataEcharsMaterial" resultType="java.util.Map">
        SELECT
               t1.*, 'crew1' AS 'crewNum',
               t2.produce_proportioning_num,
               t2.produce_date,
               t2.material_aggregate_1,
               t2.material_aggregate_2,
               t2.material_aggregate_3,
               t2.material_aggregate_4,
               t2.material_aggregate_5,
               t2.material_aggregate_6,
               t2.material_aggregate_10,
               t2.material_aggregate_9,
               t2.material_aggregate_8,
               t2.material_aggregate_7,
               t2.material_stone_1,
               t2.material_stone_2,
               t2.material_stone_3,
               t2.material_stone_4,
               t2.material_asphalt,
               t2.material_additive_1,
               t2.material_additive_2,
               t2.material_additive_3,
               t2.material_regenerate,
               t2.material_additive,
               t2.temperature_warehouse_1 AS tem_warehouse_1,
               t2.temperature_mixture AS tem_mixture,
               t2.temperature_duster AS tem_duster,
               t2.temperature_asphalt AS tem_asphalt,
               t2.temperature_aggregate AS tem_aggregate,
               t2.material_total
        FROM
             quality_proportioning_message AS t1
                 INNER JOIN (
                            SELECT
                                   produce_proportioning_num,
                                   produce_date,
                                   material_aggregate_2,
                                   material_aggregate_3,
                                   material_aggregate_4,
                                   material_aggregate_5,
                                   material_aggregate_6,
                                   material_aggregate_7,
                                   material_aggregate_8,
                                   material_aggregate_9,
                                   material_aggregate_10,
                                   material_stone_1,
                                   material_stone_2,
                                   material_stone_3,
                                   material_stone_4,
                                   material_asphalt,
                                   material_regenerate,
                                   material_additive,
                                   material_additive_1,
                                   material_additive_2,
                                   material_additive_3,
                                   temperature_warehouse_1,
                                   temperature_mixture,
                                   temperature_duster,
                                   temperature_asphalt,
                                   temperature_aggregate,
                                   material_total
                            FROM
                                 quality_monitoring_realtime_$ { crewNum }
                                    WHERE
                                    Id = $ { id }
                            ) AS t2 ON t1.crew1_modele_id = t2.produce_proportioning_num
        WHERE
                YEAR (t1.create_time) = YEAR (t2.produce_date)
    </select>

    <select id="selectGradingBycrewNumAndRationNum" resultType="java.util.Map">
        SELECT
                *
        FROM
             quality_proportioning_grading
        WHERE
                ${crewNum}_id = ${rationNum};
    </select>
    <select id="selectRatioListByDate" resultType="java.util.Map">

        SELECT
               QPM.pro_name,
               QPM.${crewNum}_modele_id as modele_id
        FROM
             quality_proportioning_message AS QPM
                 INNER JOIN quality_proportioning_model AS QPMD
                     ON QPM.id = QPMD.message_id
        WHERE
                QPM.${crewNum}_modele_id IN
                (SELECT
                        produce_proportioning_num
                 FROM
                      quality_monitoring_realtime_${crew}
                 WHERE produce_date
                               BETWEEN  &apos;${startDate}&apos;
                               AND &apos;${endDate}&apos;
                 GROUP BY
                          produce_proportioning_num)
          AND YEAR(QPMD.create_time) = YEAR(&apos;${startDate}&apos;)
    </select>
</mapper>
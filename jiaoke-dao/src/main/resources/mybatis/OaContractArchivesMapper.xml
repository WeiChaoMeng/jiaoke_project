<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.oa.dao.OaContractArchivesMapper">
    <resultMap id="BaseResultMap" type="com.jiaoke.oa.bean.OaContractArchives">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="serial_number" jdbcType="VARCHAR" property="serialNumber"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="archives_abstract" jdbcType="VARCHAR" property="archivesAbstract"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
        <result column="signing_unit" jdbcType="VARCHAR" property="signingUnit"/>
        <result column="signing_date" jdbcType="VARCHAR" property="signingDate"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="rich_text" jdbcType="VARCHAR" property="richText"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, serial_number, title, archives_abstract, `operator`, signing_unit, signing_date, 
    created_date, rich_text, `state`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oa_contract_archives
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oa_contract_archives
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.jiaoke.oa.bean.OaContractArchives">
    insert into oa_contract_archives (id, serial_number, title, 
      archives_abstract, `operator`, signing_unit, 
      signing_date, created_date, rich_text, 
      `state`)
    values (#{id,jdbcType=INTEGER}, #{serialNumber,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{archivesAbstract,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, #{signingUnit,jdbcType=VARCHAR}, 
      #{signingDate,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{richText,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.jiaoke.oa.bean.OaContractArchives">
        insert into oa_contract_archives
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="serialNumber != null">
                serial_number,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="archivesAbstract != null">
                archives_abstract,
            </if>
            <if test="operator != null">
                `operator`,
            </if>
            <if test="signingUnit != null">
                signing_unit,
            </if>
            <if test="signingDate != null">
                signing_date,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="richText != null">
                rich_text,
            </if>
            <if test="state != null">
                `state`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="serialNumber != null">
                #{serialNumber,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="archivesAbstract != null">
                #{archivesAbstract,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="signingUnit != null">
                #{signingUnit,jdbcType=VARCHAR},
            </if>
            <if test="signingDate != null">
                #{signingDate,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="richText != null">
                #{richText,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jiaoke.oa.bean.OaContractArchives">
        update oa_contract_archives
        <set>
            <if test="serialNumber != null">
                serial_number = #{serialNumber,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="archivesAbstract != null">
                archives_abstract = #{archivesAbstract,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                `operator` = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="signingUnit != null">
                signing_unit = #{signingUnit,jdbcType=VARCHAR},
            </if>
            <if test="signingDate != null">
                signing_date = #{signingDate,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="richText != null">
                rich_text = #{richText,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jiaoke.oa.bean.OaContractArchives">
    update oa_contract_archives
    set serial_number = #{serialNumber,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      archives_abstract = #{archivesAbstract,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR},
      signing_unit = #{signingUnit,jdbcType=VARCHAR},
      signing_date = #{signingDate,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      rich_text = #{richText,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from oa_contract_archives
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.qualitytest.dao.QualityTestExperimentalStandardvalueItemDao">
	<!-- QualityTestExperimentalStandardvalueItem的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_QualityTestExperimentalStandardvalueItem_Map" type="com.jiaoke.qualitytest.bean.QualityTestExperimentalStandardvalueItem">
		<id column="id" property="id" />
		<result column="materials_id" property="materialsId" />
		<result column="materials" property="materials" />
		<result column="experimental_id" property="experimentalId" />
		<result column="experimental_name" property="experimentalName" />
		<result column="experimental_item" property="experimentalItem" />
		<result column="sort" property="sort" />
		<result column="remark" property="remark" />
	</resultMap>

	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
								separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
								separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:quality_test_experimental_standardvalue_item的列名 -->
	<sql id="quality_test_experimental_standardvalue_item_Column">
		id,materials_id,materials,experimental_id,experimental_name,experimental_item,sort,remark
	</sql>

	<!--获得类名为:QualityTestExperimentalStandardvalueItem对应的数据库表的数据总行数 -->
	<select id="getQualityTestExperimentalStandardvalueItemRowCount" parameterType="com.jiaoke.common.bean.Assist" resultType="java.lang.Long">
		select count(*) from quality_test_experimental_standardvalue_item
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>
	
	<!-- 获得类名为:QualityTestExperimentalStandardvalueItem对应数据库中表的数据集合 -->
	<select id="selectQualityTestExperimentalStandardvalueItem" parameterType="com.jiaoke.common.bean.Assist" resultMap="result_QualityTestExperimentalStandardvalueItem_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="quality_test_experimental_standardvalue_item_Column" />
			</otherwise>
		</choose>
		from quality_test_experimental_standardvalue_item
		<if test="require!=null">
			<include refid="assist" />
		</if>
		<if test="order !=null">${order}</if>
		<choose>
			<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
			<when test="rowSize !=null">LIMIT #{rowSize}</when>
		</choose>
	</select>
	<!-- 通过QualityTestExperimentalStandardvalueItem的id获得对应数据库中表的数据对象 -->
	<select id="selectQualityTestExperimentalStandardvalueItemById" parameterType="Integer" resultMap="result_QualityTestExperimentalStandardvalueItem_Map">
		select
		<include refid="quality_test_experimental_standardvalue_item_Column" />
		from quality_test_experimental_standardvalue_item
		where id = #{id}
	</select>
	
	<!-- 获得一个QualityTestExperimentalStandardvalueItem对象,以参数QualityTestExperimentalStandardvalueItem对象中不为空的属性作为条件进行查询 -->
	<select id="selectQualityTestExperimentalStandardvalueItemObjSingle" parameterType="com.jiaoke.qualitytest.bean.QualityTestExperimentalStandardvalueItem" resultMap="result_QualityTestExperimentalStandardvalueItem_Map">
		select
		<include refid="quality_test_experimental_standardvalue_item_Column" />
		from quality_test_experimental_standardvalue_item
		<where>
		<if test="materialsId != null"> and materials_id = #{materialsId}</if>
		<if test="materials != null"> and materials = #{materials}</if>
		<if test="experimentalId != null"> and experimental_id = #{experimentalId}</if>
		<if test="experimentalName != null"> and experimental_name = #{experimentalName}</if>
		<if test="experimentalItem != null"> and experimental_item = #{experimentalItem}</if>
		<if test="sort != null"> and sort = #{sort}</if>
		<if test="remark != null"> and remark = #{remark}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
		LIMIT 1
	</select>
	
	<!-- 获得QualityTestExperimentalStandardvalueItem对象,以参数QualityTestExperimentalStandardvalueItem对象中不为空的属性作为条件进行查询 -->
	<select id="selectQualityTestExperimentalStandardvalueItemByObj" parameterType="com.jiaoke.qualitytest.bean.QualityTestExperimentalStandardvalueItem" resultMap="result_QualityTestExperimentalStandardvalueItem_Map">
		select
		<include refid="quality_test_experimental_standardvalue_item_Column" />
		from quality_test_experimental_standardvalue_item
		<where>
		<if test="materialsId != null"> and materials_id = #{materialsId}</if>
		<if test="materials != null"> and materials = #{materials}</if>
		<if test="experimentalId != null"> and experimental_id = #{experimentalId}</if>
		<if test="experimentalName != null"> and experimental_name = #{experimentalName}</if>
		<if test="experimentalItem != null"> and experimental_item = #{experimentalItem}</if>
		<if test="sort != null"> and sort = #{sort}</if>
		<if test="remark != null"> and remark = #{remark}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
	</select>

	<!-- 将QualityTestExperimentalStandardvalueItem插入到对应数据库的表中,包括属性值为null的数据 -->
	<insert id="insertQualityTestExperimentalStandardvalueItem" parameterType="com.jiaoke.qualitytest.bean.QualityTestExperimentalStandardvalueItem">
		insert into 
		quality_test_experimental_standardvalue_item (id,materials_id,materials,experimental_id,experimental_name,experimental_item,sort,remark) 
		values(#{id},#{materialsId},#{materials},#{experimentalId},#{experimentalName},#{experimentalItem},#{sort},#{remark})
	</insert>

	<!-- 将QualityTestExperimentalStandardvalueItem中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullQualityTestExperimentalStandardvalueItem" parameterType="com.jiaoke.qualitytest.bean.QualityTestExperimentalStandardvalueItem">
		insert into quality_test_experimental_standardvalue_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="materialsId != null">materials_id,</if>
			<if test="materials != null">materials,</if>
			<if test="experimentalId != null">experimental_id,</if>
			<if test="experimentalName != null">experimental_name,</if>
			<if test="experimentalItem != null">experimental_item,</if>
			<if test="sort != null">sort,</if>
			<if test="remark != null">remark,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="materialsId != null">#{materialsId},</if>
			<if test="materials != null">#{materials},</if>
			<if test="experimentalId != null">#{experimentalId},</if>
			<if test="experimentalName != null">#{experimentalName},</if>
			<if test="experimentalItem != null">#{experimentalItem},</if>
			<if test="sort != null">#{sort},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</insert>

	<!-- 将QualityTestExperimentalStandardvalueItem批量插入到对应数据库的表中 -->
	<insert id="insertQualityTestExperimentalStandardvalueItemByBatch" parameterType="ArrayList">
		insert into quality_test_experimental_standardvalue_item(id,materials_id,materials,experimental_id,experimental_name,experimental_item,sort,remark) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id},#{item.materialsId},#{item.materials},#{item.experimentalId},#{item.experimentalName},#{item.experimentalItem},#{item.sort},#{item.remark})
		</foreach>
	</insert>
	
	<!-- 通过QualityTestExperimentalStandardvalueItem的id将数据库表中对应的数据删除 -->
	<delete id="deleteQualityTestExperimentalStandardvalueItemById" parameterType="Integer">
		delete from quality_test_experimental_standardvalue_item
		where  id  =  #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将QualityTestExperimentalStandardvalueItem对应的数据库表的数据删除 -->
	<delete id="deleteQualityTestExperimentalStandardvalueItemByAssist" parameterType="com.jiaoke.common.bean.Assist">
		delete from quality_test_experimental_standardvalue_item
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</delete>
	
	<!-- 通过QualityTestExperimentalStandardvalueItem的id将QualityTestExperimentalStandardvalueItem的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateQualityTestExperimentalStandardvalueItemById" parameterType="com.jiaoke.qualitytest.bean.QualityTestExperimentalStandardvalueItem"> 
		update quality_test_experimental_standardvalue_item set
		<set>
			materials_id = #{materialsId} , 
			materials = #{materials} , 
			experimental_id = #{experimentalId} , 
			experimental_name = #{experimentalName} , 
			experimental_item = #{experimentalItem} , 
			sort = #{sort} , 
			remark = #{remark} , 
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过QualityTestExperimentalStandardvalueItem的id将QualityTestExperimentalStandardvalueItem中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullQualityTestExperimentalStandardvalueItemById" parameterType="com.jiaoke.qualitytest.bean.QualityTestExperimentalStandardvalueItem">
		update quality_test_experimental_standardvalue_item
		<set>
					<if test="materialsId != null">materials_id = #{materialsId},</if>
					<if test="materials != null">materials = #{materials},</if>
					<if test="experimentalId != null">experimental_id = #{experimentalId},</if>
					<if test="experimentalName != null">experimental_name = #{experimentalName},</if>
					<if test="experimentalItem != null">experimental_item = #{experimentalItem},</if>
					<if test="sort != null">sort = #{sort},</if>
					<if test="remark != null">remark = #{remark},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过辅助工具Assist中的条件将QualityTestExperimentalStandardvalueItem中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateQualityTestExperimentalStandardvalueItem" parameterType="map">
		update quality_test_experimental_standardvalue_item
		<set>
			id = #{enti.id},
			materials_id = #{enti.materialsId},
			materials = #{enti.materials},
			experimental_id = #{enti.experimentalId},
			experimental_name = #{enti.experimentalName},
			experimental_item = #{enti.experimentalItem},
			sort = #{enti.sort},
			remark = #{enti.remark},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将QualityTestExperimentalStandardvalueItem中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullQualityTestExperimentalStandardvalueItem" parameterType="map">
		update quality_test_experimental_standardvalue_item
		<set>
			<if test="enti.id != null">id = #{enti.id},</if>
			<if test="enti.materialsId != null">materials_id = #{enti.materialsId},</if>
			<if test="enti.materials != null">materials = #{enti.materials},</if>
			<if test="enti.experimentalId != null">experimental_id = #{enti.experimentalId},</if>
			<if test="enti.experimentalName != null">experimental_name = #{enti.experimentalName},</if>
			<if test="enti.experimentalItem != null">experimental_item = #{enti.experimentalItem},</if>
			<if test="enti.sort != null">sort = #{enti.sort},</if>
			<if test="enti.remark != null">remark = #{enti.remark},</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.quality.dao.QualityProjectDao">

    <insert id="insertProjectItem" parameterType="com.jiaoke.quality.bean.QualityProjectItem">
        INSERT INTO quality_test_project (
                client_num,
                project_name,
                `construction_units`,
                client_name,
                `update`,
                upUser,
                remaker
                )
        VALUES
               (#{fromData.clientNum},
                #{fromData.projectName},
                #{fromData.constructionUnits},
                #{fromData.clientName},
                #{fromData.update},
                #{fromData.upUser},
                #{fromData.remaker})
    </insert>
    <select id="selectUserProjectList" resultType="com.jiaoke.quality.bean.QualityProjectItem">
        SELECT
               id,
               client_num AS clientNum,
               project_name AS projectName,
               construction_units AS constructionUnits,
               client_name AS clientName,
               `update`,
               upUser,
               remaker
        from quality_test_project;
    </select>
    <select id="selectUserProjectById" resultType="com.jiaoke.quality.bean.QualityProjectItem">
        SELECT
               id,
               client_num AS clientNum,
               project_name AS projectName,
               construction_units AS constructionUnits,
               client_name AS clientName,
               `update`,
               upUser,
               remaker
        from quality_test_project
        where id = #{id};
    </select>
    <delete id="delectUserProject" parameterType="java.lang.String">
        DELETE
        FROM
             quality_test_project
        WHERE
                id = #{idStr}
    </delete>

    <delete id="delectUserProjectByIdArray" parameterType="java.lang.String">
        DELETE
        FROM
             quality_test_project
        WHERE
                id in
                        <foreach collection="idArr" item="id"  separator="," open="(" close=")">
                            #{id}
                        </foreach>

    </delete>
    <update id="updateProjectItem" parameterType="com.jiaoke.quality.bean.QualityProjectItem">
        UPDATE quality_test_project
        SET client_num = #{fromData.clientNum},
            project_name = #{fromData.projectName},
            construction_units = #{fromData.constructionUnits},
            client_name = #{fromData.clientName},
            `update` = #{fromData.update},
            upUser = #{fromData.upUser},
            remaker = #{fromData.remaker}
        WHERE
                id = #{fromData.id}
    </update>
    <select id="selectLastCarNumByCrewNum" resultType="java.util.Map">
        SELECT
               id,
               car_num AS carNum,
               up_time AS upTime,
               crew_num AS crewNum
        FROM
             `quality_car_num_history`
        WHERE
                crew_num = #{crewNum}
        ORDER BY
                 up_time DESC
        LIMIT 1;
    </select>
    <insert id="insertCarNum" parameterType="java.lang.String" useGeneratedKeys="true">
        INSERT INTO quality_car_num_history (car_num, up_time, crew_num)
        VALUES
               (#{license},#{recotime},#{crewNum})
    </insert>
    <update id="updateRealtimeDataByCrewAndDate" parameterType="java.lang.String">
        UPDATE
                quality_monitoring_realtime_${crewNum}
        set produce_car_num = &apos;${license}&apos;
        WHERE
                produce_date = &apos;${recotime}&apos;
    </update>
    <insert id="insertLeaveFactory" parameterType="java.util.Map" >
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `quality_leave_factory_history`
                (
                        `project_name`,
                        `client_name`,
                        `construction_site_name`,
                        `traffic_unit`,
                        `construction_unit`,
                        `car_num`,
                        `finish_date`,
                        `finish_time`,
                        `haul_distance`,
                        `amount`,
                        `product_variety`,
                        `crewNum`,
                        `result`,
                        `msg`
                        )
        values(

               #{map.gcmc},
               #{map.khmc},
               #{map.gdm},
               #{map.gysm},
               #{map.sgdw},
               #{map.ch},
               #{map.fhrq},
               #{map.fhsj},
               #{map.yj},
               #{map.scsl},
               #{map.cpmc},
               #{map.crewNum},
               #{map.Result},
               #{map.Msgs}
                      );

    </insert>

    <update id="updateRealtimeDataByDate" parameterType="java.lang.String">

        UPDATE quality_monitoring_realtime_${crewNum}
        set produce_car_num = &apos;${license}&apos;,
           project_name = &apos;${proName}&apos;
        WHERE
                str_to_date(CONCAT('',produce_date,produce_time),'%Y-%m-%d %H:%i:%s') between  &apos;${lastTime}&apos;  and &apos;${carTime}&apos;;
    </update>
    <update id="updateRealTimeDataByCarNum" parameterType="java.lang.String">
        UPDATE quality_monitoring_realtime_${crewNum}
        set produce_car_num = &apos;${license}&apos;
        WHERE
                str_to_date(CONCAT('',produce_date,produce_time),'%Y-%m-%d %H:%i:%s') between  &apos;${lastTime}&apos;  and &apos;${carTime}&apos;;
    </update>
</mapper>
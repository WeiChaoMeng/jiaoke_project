<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.quality.dao.QualityProjectDao">

    <insert id="insertProjectItem" parameterType="com.jiaoke.quality.bean.QualityProjectItem">
        INSERT INTO quality_test_project (
                client_num,
                project_name,
                `construction_units`,
                client_name,
                `update`,
                upUser,
                remaker
                )
        VALUES
               (#{fromData.clientNum},
                #{fromData.projectName},
                #{fromData.constructionUnits},
                #{fromData.clientName},
                #{fromData.update},
                #{fromData.upUser},
                #{fromData.remaker})
    </insert>
    <select id="selectUserProjectList" resultType="com.jiaoke.quality.bean.QualityProjectItem">
        SELECT
               id,
               client_num AS clientNum,
               project_name AS projectName,
               construction_units AS constructionUnits,
               client_name AS clientName,
               `update`,
               upUser,
               remaker
        from quality_test_project;
    </select>
    <select id="selectUserProjectById" resultType="com.jiaoke.quality.bean.QualityProjectItem">
        SELECT
               id,
               client_num AS clientNum,
               project_name AS projectName,
               construction_units AS constructionUnits,
               client_name AS clientName,
               `update`,
               upUser,
               remaker
        from quality_test_project
        where id = #{id};
    </select>
    <delete id="delectUserProject" parameterType="java.lang.String">
        DELETE
        FROM
             quality_test_project
        WHERE
                id = #{idStr}
    </delete>

    <delete id="delectUserProjectByIdArray" parameterType="java.lang.String">
        DELETE
        FROM
        quality_test_project
        WHERE
        id in
        <foreach collection="idArr" item="id"  separator="," open="(" close=")">
            #{id}
        </foreach>

    </delete>
    <update id="updateProjectItem" parameterType="com.jiaoke.quality.bean.QualityProjectItem">
        UPDATE quality_test_project
        SET client_num = #{fromData.clientNum},
            project_name = #{fromData.projectName},
            construction_units = #{fromData.constructionUnits},
            client_name = #{fromData.clientName},
            `update` = #{fromData.update},
            upUser = #{fromData.upUser},
            remaker = #{fromData.remaker}
        WHERE
                id = #{fromData.id}
    </update>
    <select id="selectLastCarNumByCrewNum" resultType="java.util.Map">
        SELECT
               id,
               car_num AS carNum,
               up_time AS upTime,
               crew_num AS crewNum
        FROM
             `quality_car_num_history`
        WHERE
                crew_num = #{crewNum}
        ORDER BY
                 up_time DESC
        LIMIT 1;
    </select>
    <select id="selectLastCarNumByCrewNumAndTime" resultType="java.util.Map">
        SELECT
               id,
               car_num AS carNum,
               up_time AS upTime,
               crew_num AS crewNum
        FROM
             `quality_car_num_history`
        WHERE
                crew_num = #{crewId}
          AND up_time &lt;  #{recotime}
        ORDER BY
                 up_time DESC
        LIMIT 1;
    </select>
    <insert id="insertCarNum" parameterType="java.lang.String" useGeneratedKeys="true">
        INSERT INTO quality_car_num_history (car_num, up_time, crew_num)
        VALUES
               (#{license},#{recotime},#{crewNum})
    </insert>
    <update id="updateRealtimeDataByCrewAndDate" parameterType="java.lang.String">
        UPDATE
                quality_monitoring_realtime_${crewNum}
        set produce_car_num = &apos;${license}&apos;
        WHERE
                produce_date = &apos;${recotime}&apos;
    </update>
    <insert id="insertLeaveFactory" parameterType="java.util.Map" >
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `quality_leave_factory_history`
        (
        `project_name`,
        `client_name`,
        `construction_site_name`,
        `traffic_unit`,
        `construction_unit`,
        `car_num`,
        `finish_date`,
        `finish_time`,
        `haul_distance`,
        `amount`,
        `product_variety`,
        `crewNum`,
        `result`,
        `msg`
        )
        values(

        #{map.gcmc},
        #{map.khmc},
        #{map.gdm},
        #{map.gysm},
        #{map.sgdw},
        #{map.ch},
        #{map.fhrq},
        #{map.fhsj},
        #{map.yj},
        #{map.scsl},
        #{map.cpmc},
        #{map.crewNum},
        #{map.Result},
        #{map.Msgs}
        );

    </insert>

    <update id="updateRealtimeDataByDate" parameterType="java.lang.String">

        UPDATE quality_monitoring_realtime_${crewNum}
        set produce_car_num = &apos;${license}&apos;,
            project_name = &apos;${proName}&apos;
        WHERE
                str_to_date(CONCAT('',produce_date,produce_time),'%Y-%m-%d %H:%i:%s') between  &apos;${lastTime}&apos;  and &apos;${carTime}&apos;;
    </update>
    <update id="updateRealTimeDataByCarNum" parameterType="java.lang.String">
        UPDATE quality_monitoring_realtime_${crewNum}
        set produce_car_num = &apos;${license}&apos;
        WHERE
                str_to_date(CONCAT('',produce_date,produce_time),'%Y-%m-%d %H:%i:%s') between  &apos;${lastTime}&apos;  and &apos;${carTime}&apos;;
    </update>
    <update id="updateWarningDataByDate" parameterType="java.lang.String">
        UPDATE quality_warning_promessage_crew
        set produce_car_num = &apos;${license}&apos;,
        project_name = &apos;${proName}&apos;
        WHERE
        str_to_date(CONCAT('',produce_date,produce_time),'%Y-%m-%d %H:%i:%s') between  &apos;${lastTime}&apos;  and &apos;${carTime}&apos;
        AND
        <choose>
            <when test="crewNum == 'data1'">
                produce_crewNum = 1
            </when>
            <otherwise>
                produce_crewNum = 2
            </otherwise>
        </choose>
    </update>
    <insert id="insertErrorCarNum" parameterType="java.lang.String" >
        INSERT INTO `quality_error_car_num` ( `car_num`, `uptime`)
        VALUES
               ( #{license},  #{carTime});
    </insert>
    <insert id="insertWeighingInformation" parameterType="java.util.Map">
        INSERT INTO `luchi_date`.`quality_leave_factory_history` (
                `project_name`,
                `client_name`,
                `construction_site_name`,
                `traffic_unit`,
                `construction_unit`,
                `car_num`,
                `finish_date`,
                `finish_time`,
                `haul_distance`,
                `amount`,
                `product_variety`,
                `crewNum`
                )
        VALUES
               (
                       #{insertMap.project_name},
                       #{insertMap.client_name},
                       #{insertMap.construction_site_name},
                       #{insertMap.traffic_unit},
                       #{insertMap.construction_unit},
                       #{insertMap.car_num},
                       #{insertMap.finish_date},
                       #{insertMap.finish_time},
                       #{insertMap.haul_distance},
                       #{insertMap.amount},
                       #{insertMap.product_variety},
                       #{insertMap.crewNum}
                       );


    </insert>
    <select id="selectLeaveFactory" resultType="java.util.Map">
        SELECT
                *
        FROM
             quality_leave_factory_history
        WHERE
                finish_date = #{map.fhrq}
          AND finish_time = #{map.fhsj}
          AND car_num = #{map.ch}
    </select>
    <select id="selectCarNumByWeighing" resultType="java.util.Map">
        SELECT
               T1.id,
               T1.car_num,
               DATE_FORMAT(T1.up_time,'%Y-%m-%d %H:%i:%s') AS up_time ,
               T1.crew_num,
               (SELECT DATE_FORMAT(up_time,'%Y-%m-%d %H:%i:%s')  AS lastTime FROM quality_car_num_history WHERE crew_num = T1.crew_num AND up_time &lt; T1.up_time ORDER BY up_time DESC limit 1) AS lastTime
        FROM
             quality_car_num_history AS T1
        WHERE
                T1.up_time &lt;  DATE_ADD(STR_TO_DATE(CONCAT(#{insertMap.finish_date},' ',#{insertMap.finish_time}),'%Y-%m-%d %H:%i:%s'),interval 30 MINUTE)
          AND T1.crew_num = #{insertMap.crewNum}
          AND T1.car_num = #{insertMap.car_num}
          AND TIMESTAMPDIFF(HOUR,T1.up_time,DATE_ADD(STR_TO_DATE(CONCAT(#{insertMap.finish_date},' ',#{insertMap.finish_time}),'%Y-%m-%d %H:%i:%s'),interval 30 MINUTE)) &lt; 1
        ORDER BY T1.up_time DESC
        LIMIT 1
    </select>
    <select id="selectCarNumByLeaveFactory" resultType="java.util.Map">
        SELECT
               T1.*,
               (SELECT up_time AS lastTime FROM quality_car_num_history WHERE  crew_num = T1.crew_num AND up_time &lt; T1.up_time ORDER BY up_time DESC limit 1) AS lastTime
        FROM
             quality_car_num_history AS T1
        WHERE
                T1.up_time &lt; DATE_ADD(STR_TO_DATE(CONCAT(#{insertMap.finish_date},' ',#{insertMap.finish_time}),'%Y-%m-%d %H:%i:%s'),interval 30 MINUTE)
          AND T1.crew_num = #{insertMap.crewNum}
          AND TIMESTAMPDIFF(MINUTE,T1.up_time,DATE_ADD(STR_TO_DATE(CONCAT(#{insertMap.finish_date},' ',#{insertMap.finish_time}),'%Y-%m-%d %H:%i:%s'),interval 30 MINUTE)) &lt; 30
        ORDER BY T1.up_time DESC
    </select>
    <update id="updateRealTimeCarNumAndProject" parameterType="java.lang.String" >
        <choose>
            <when test="crewNum == '1'.toString()">
                UPDATE quality_monitoring_realtime_data1
                SET project_name = #{projectName},
                produce_car_num = #{carNum}
                WHERE
                str_to_date(CONCAT(produce_date,' ',produce_time),'%Y-%m-%d %H:%i:%s')  BETWEEN #{lastTime} AND  #{upTime};
            </when>
            <otherwise>
                UPDATE quality_monitoring_realtime_data2
                SET project_name = #{projectName},
                produce_car_num = #{carNum}
                WHERE
                str_to_date(CONCAT(produce_date,' ',produce_time),'%Y-%m-%d %H:%i:%s')  BETWEEN #{lastTime} AND  #{upTime};
            </otherwise>
        </choose>
    </update>
</mapper>
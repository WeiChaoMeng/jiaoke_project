<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.oa.dao.OaPersonalWagesMapper">
    <resultMap id="BaseResultMap" type="com.jiaoke.oa.bean.OaPersonalWages">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <id column="serial_number" jdbcType="INTEGER" property="serialNumber"/>
        <result column="department" jdbcType="VARCHAR" property="department"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="position" jdbcType="VARCHAR" property="position"/>
        <result column="position_salary" jdbcType="VARCHAR" property="positionSalary"/>
        <result column="technical_title_allowance" jdbcType="VARCHAR" property="technicalTitleAllowance"/>
        <result column="special_work_allowance" jdbcType="VARCHAR" property="specialWorkAllowance"/>
        <result column="reissue_wages" jdbcType="VARCHAR" property="reissueWages"/>
        <result column="bonus" jdbcType="VARCHAR" property="bonus"/>
        <result column="monthly_award" jdbcType="VARCHAR" property="monthlyAward"/>
        <result column="subsidy" jdbcType="VARCHAR" property="subsidy"/>
        <result column="megathermal_allowance" jdbcType="VARCHAR" property="megathermalAllowance"/>
        <result column="overtime_pay" jdbcType="VARCHAR" property="overtimePay"/>
        <result column="withholding_wages" jdbcType="VARCHAR" property="withholdingWages"/>
        <result column="wages_payable" jdbcType="VARCHAR" property="wagesPayable"/>
        <result column="endowment_insurance" jdbcType="VARCHAR" property="endowmentInsurance"/>
        <result column="unemployment_insurance" jdbcType="VARCHAR" property="unemploymentInsurance"/>
        <result column="medical_insurance" jdbcType="VARCHAR" property="medicalInsurance"/>
        <result column="large_medical_insurance" jdbcType="VARCHAR" property="largeMedicalInsurance"/>
        <result column="accumulation_fund" jdbcType="VARCHAR" property="accumulationFund"/>
        <result column="deductible_expenses" jdbcType="VARCHAR" property="deductibleExpenses"/>
        <result column="fee_after_deduction" jdbcType="VARCHAR" property="feeAfterDeduction"/>
        <result column="individual_income_tax" jdbcType="VARCHAR" property="individualIncomeTax"/>
        <result column="membership_fee" jdbcType="VARCHAR" property="membershipFee"/>
        <result column="actual_amount" jdbcType="VARCHAR" property="actualAmount"/>
        <result column="settlement_date" jdbcType="VARCHAR" property="settlementDate"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="wage_statistics_id" jdbcType="INTEGER" property="wageStatisticsId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, serial_number, department, `name`, `position`, position_salary, technical_title_allowance, special_work_allowance,
    reissue_wages, bonus, monthly_award, subsidy, megathermal_allowance, overtime_pay, 
    withholding_wages, wages_payable, endowment_insurance, unemployment_insurance, medical_insurance, 
    large_medical_insurance, accumulation_fund, deductible_expenses, fee_after_deduction, 
    individual_income_tax, membership_fee, actual_amount, settlement_date, `state`, wage_statistics_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oa_personal_wages
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oa_personal_wages
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.jiaoke.oa.bean.OaPersonalWages">
    insert into oa_personal_wages (id, serial_number, department, `name`,
      `position`, position_salary, technical_title_allowance, 
      special_work_allowance, reissue_wages, bonus, 
      monthly_award, subsidy, megathermal_allowance, 
      overtime_pay, withholding_wages, wages_payable, 
      endowment_insurance, unemployment_insurance, 
      medical_insurance, large_medical_insurance, 
      accumulation_fund, deductible_expenses, fee_after_deduction, 
      individual_income_tax, membership_fee, actual_amount, 
      settlement_date, `state`, wage_statistics_id
      )
    values (#{id,jdbcType=INTEGER}, #{serialNumber,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{position,jdbcType=VARCHAR}, #{positionSalary,jdbcType=VARCHAR}, #{technicalTitleAllowance,jdbcType=VARCHAR}, 
      #{specialWorkAllowance,jdbcType=VARCHAR}, #{reissueWages,jdbcType=VARCHAR}, #{bonus,jdbcType=VARCHAR}, 
      #{monthlyAward,jdbcType=VARCHAR}, #{subsidy,jdbcType=VARCHAR}, #{megathermalAllowance,jdbcType=VARCHAR},
      #{overtimePay,jdbcType=VARCHAR}, #{withholdingWages,jdbcType=VARCHAR}, #{wagesPayable,jdbcType=VARCHAR}, 
      #{endowmentInsurance,jdbcType=VARCHAR}, #{unemploymentInsurance,jdbcType=VARCHAR}, 
      #{medicalInsurance,jdbcType=VARCHAR}, #{largeMedicalInsurance,jdbcType=VARCHAR}, 
      #{accumulationFund,jdbcType=VARCHAR}, #{deductibleExpenses,jdbcType=VARCHAR}, #{feeAfterDeduction,jdbcType=VARCHAR}, 
      #{individualIncomeTax,jdbcType=VARCHAR}, #{membershipFee,jdbcType=VARCHAR}, #{actualAmount,jdbcType=VARCHAR}, 
      #{settlementDate,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{wageStatisticsId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.jiaoke.oa.bean.OaPersonalWages">
        insert into oa_personal_wages
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="serialNumber != null">
                serial_number,
            </if>
            <if test="department != null">
                department,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="position != null">
                `position`,
            </if>
            <if test="positionSalary != null">
                position_salary,
            </if>
            <if test="technicalTitleAllowance != null">
                technical_title_allowance,
            </if>
            <if test="specialWorkAllowance != null">
                special_work_allowance,
            </if>
            <if test="reissueWages != null">
                reissue_wages,
            </if>
            <if test="bonus != null">
                bonus,
            </if>
            <if test="monthlyAward != null">
                monthly_award,
            </if>
            <if test="subsidy != null">
                subsidy,
            </if>
            <if test="megathermalAllowance != null">
                megathermal_allowance,
            </if>
            <if test="overtimePay != null">
                overtime_pay,
            </if>
            <if test="withholdingWages != null">
                withholding_wages,
            </if>
            <if test="wagesPayable != null">
                wages_payable,
            </if>
            <if test="endowmentInsurance != null">
                endowment_insurance,
            </if>
            <if test="unemploymentInsurance != null">
                unemployment_insurance,
            </if>
            <if test="medicalInsurance != null">
                medical_insurance,
            </if>
            <if test="largeMedicalInsurance != null">
                large_medical_insurance,
            </if>
            <if test="accumulationFund != null">
                accumulation_fund,
            </if>
            <if test="deductibleExpenses != null">
                deductible_expenses,
            </if>
            <if test="feeAfterDeduction != null">
                fee_after_deduction,
            </if>
            <if test="individualIncomeTax != null">
                individual_income_tax,
            </if>
            <if test="membershipFee != null">
                membership_fee,
            </if>
            <if test="actualAmount != null">
                actual_amount,
            </if>
            <if test="settlementDate != null">
                settlement_date,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="wageStatisticsId != null">
                wage_statistics_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="serialNumber != null">
                #{serialNumber,jdbcType=INTEGER},
            </if>
            <if test="department != null">
                #{department,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                #{position,jdbcType=VARCHAR},
            </if>
            <if test="positionSalary != null">
                #{positionSalary,jdbcType=VARCHAR},
            </if>
            <if test="technicalTitleAllowance != null">
                #{technicalTitleAllowance,jdbcType=VARCHAR},
            </if>
            <if test="specialWorkAllowance != null">
                #{specialWorkAllowance,jdbcType=VARCHAR},
            </if>
            <if test="reissueWages != null">
                #{reissueWages,jdbcType=VARCHAR},
            </if>
            <if test="bonus != null">
                #{bonus,jdbcType=VARCHAR},
            </if>
            <if test="monthlyAward != null">
                #{monthlyAward,jdbcType=VARCHAR},
            </if>
            <if test="subsidy != null">
                #{subsidy,jdbcType=VARCHAR},
            </if>
            <if test="megathermalAllowance != null">
                #{megathermalAllowance,jdbcType=VARCHAR},
            </if>
            <if test="overtimePay != null">
                #{overtimePay,jdbcType=VARCHAR},
            </if>
            <if test="withholdingWages != null">
                #{withholdingWages,jdbcType=VARCHAR},
            </if>
            <if test="wagesPayable != null">
                #{wagesPayable,jdbcType=VARCHAR},
            </if>
            <if test="endowmentInsurance != null">
                #{endowmentInsurance,jdbcType=VARCHAR},
            </if>
            <if test="unemploymentInsurance != null">
                #{unemploymentInsurance,jdbcType=VARCHAR},
            </if>
            <if test="medicalInsurance != null">
                #{medicalInsurance,jdbcType=VARCHAR},
            </if>
            <if test="largeMedicalInsurance != null">
                #{largeMedicalInsurance,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFund != null">
                #{accumulationFund,jdbcType=VARCHAR},
            </if>
            <if test="deductibleExpenses != null">
                #{deductibleExpenses,jdbcType=VARCHAR},
            </if>
            <if test="feeAfterDeduction != null">
                #{feeAfterDeduction,jdbcType=VARCHAR},
            </if>
            <if test="individualIncomeTax != null">
                #{individualIncomeTax,jdbcType=VARCHAR},
            </if>
            <if test="membershipFee != null">
                #{membershipFee,jdbcType=VARCHAR},
            </if>
            <if test="actualAmount != null">
                #{actualAmount,jdbcType=VARCHAR},
            </if>
            <if test="settlementDate != null">
                #{settlementDate,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="wageStatisticsId != null">
                #{wageStatisticsId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jiaoke.oa.bean.OaPersonalWages">
        update oa_personal_wages
        <set>
            <if test="serialNumber != null">
                serial_number = #{department,jdbcType=INTEGER},
            </if>
            <if test="department != null">
                department = #{department,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                `position` = #{position,jdbcType=VARCHAR},
            </if>
            <if test="positionSalary != null">
                position_salary = #{positionSalary,jdbcType=VARCHAR},
            </if>
            <if test="technicalTitleAllowance != null">
                technical_title_allowance = #{technicalTitleAllowance,jdbcType=VARCHAR},
            </if>
            <if test="specialWorkAllowance != null">
                special_work_allowance = #{specialWorkAllowance,jdbcType=VARCHAR},
            </if>
            <if test="reissueWages != null">
                reissue_wages = #{reissueWages,jdbcType=VARCHAR},
            </if>
            <if test="bonus != null">
                bonus = #{bonus,jdbcType=VARCHAR},
            </if>
            <if test="monthlyAward != null">
                monthly_award = #{monthlyAward,jdbcType=VARCHAR},
            </if>
            <if test="subsidy != null">
                subsidy = #{subsidy,jdbcType=VARCHAR},
            </if>
            <if test="megathermalAllowance != null">
                megathermal_allowance = #{megathermalAllowance,jdbcType=VARCHAR},
            </if>
            <if test="overtimePay != null">
                overtime_pay = #{overtimePay,jdbcType=VARCHAR},
            </if>
            <if test="withholdingWages != null">
                withholding_wages = #{withholdingWages,jdbcType=VARCHAR},
            </if>
            <if test="wagesPayable != null">
                wages_payable = #{wagesPayable,jdbcType=VARCHAR},
            </if>
            <if test="endowmentInsurance != null">
                endowment_insurance = #{endowmentInsurance,jdbcType=VARCHAR},
            </if>
            <if test="unemploymentInsurance != null">
                unemployment_insurance = #{unemploymentInsurance,jdbcType=VARCHAR},
            </if>
            <if test="medicalInsurance != null">
                medical_insurance = #{medicalInsurance,jdbcType=VARCHAR},
            </if>
            <if test="largeMedicalInsurance != null">
                large_medical_insurance = #{largeMedicalInsurance,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFund != null">
                accumulation_fund = #{accumulationFund,jdbcType=VARCHAR},
            </if>
            <if test="deductibleExpenses != null">
                deductible_expenses = #{deductibleExpenses,jdbcType=VARCHAR},
            </if>
            <if test="feeAfterDeduction != null">
                fee_after_deduction = #{feeAfterDeduction,jdbcType=VARCHAR},
            </if>
            <if test="individualIncomeTax != null">
                individual_income_tax = #{individualIncomeTax,jdbcType=VARCHAR},
            </if>
            <if test="membershipFee != null">
                membership_fee = #{membershipFee,jdbcType=VARCHAR},
            </if>
            <if test="actualAmount != null">
                actual_amount = #{actualAmount,jdbcType=VARCHAR},
            </if>
            <if test="settlementDate != null">
                settlement_date = #{settlementDate,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=INTEGER},
            </if>
            <if test="wageStatisticsId != null">
                wage_statistics_id = #{wageStatisticsId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jiaoke.oa.bean.OaPersonalWages">
    update oa_personal_wages
    set department = #{department,jdbcType=VARCHAR},
        serial_number = #{serialNumber,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `position` = #{position,jdbcType=VARCHAR},
      position_salary = #{positionSalary,jdbcType=VARCHAR},
      technical_title_allowance = #{technicalTitleAllowance,jdbcType=VARCHAR},
      special_work_allowance = #{specialWorkAllowance,jdbcType=VARCHAR},
      reissue_wages = #{reissueWages,jdbcType=VARCHAR},
      bonus = #{bonus,jdbcType=VARCHAR},
      monthly_award = #{monthlyAward,jdbcType=VARCHAR},
      subsidy = #{subsidy,jdbcType=VARCHAR},
      megathermal_allowance = #{megathermalAllowance,jdbcType=VARCHAR},
      overtime_pay = #{overtimePay,jdbcType=VARCHAR},
      withholding_wages = #{withholdingWages,jdbcType=VARCHAR},
      wages_payable = #{wagesPayable,jdbcType=VARCHAR},
      endowment_insurance = #{endowmentInsurance,jdbcType=VARCHAR},
      unemployment_insurance = #{unemploymentInsurance,jdbcType=VARCHAR},
      medical_insurance = #{medicalInsurance,jdbcType=VARCHAR},
      large_medical_insurance = #{largeMedicalInsurance,jdbcType=VARCHAR},
      accumulation_fund = #{accumulationFund,jdbcType=VARCHAR},
      deductible_expenses = #{deductibleExpenses,jdbcType=VARCHAR},
      fee_after_deduction = #{feeAfterDeduction,jdbcType=VARCHAR},
      individual_income_tax = #{individualIncomeTax,jdbcType=VARCHAR},
      membership_fee = #{membershipFee,jdbcType=VARCHAR},
      actual_amount = #{actualAmount,jdbcType=VARCHAR},
      settlement_date = #{settlementDate,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER},
      wage_statistics_id = #{wageStatisticsId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertMultiTerm" parameterType="java.util.Map">
        insert into oa_personal_wages (serial_number, department, `name`,
        `position`, position_salary, technical_title_allowance,
        special_work_allowance, reissue_wages, bonus,
        monthly_award, subsidy, megathermal_allowance,
        overtime_pay, withholding_wages, wages_payable,
        endowment_insurance, unemployment_insurance,
        medical_insurance, large_medical_insurance,
        accumulation_fund, deductible_expenses, fee_after_deduction,
        individual_income_tax, membership_fee, actual_amount,
        settlement_date, wage_statistics_id)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (
            <foreach collection="item" item="item2" index="index2" separator=",">
                #{item2}
            </foreach>
            ,#{wageStatisticsId,jdbcType=INTEGER})
        </foreach>

    </insert>

    <select id="getGrossActualAmount" parameterType="java.lang.Integer" resultType="java.math.BigDecimal">
        SELECT
            SUM( CAST( actual_amount AS DECIMAL ( 16, 2 ) ) )
        FROM
	        `oa_personal_wages`
	    WHERE
	        wage_statistics_id = #{wageStatisticsId,jdbcType=INTEGER}
    </select>

    <update id="updateStateByWageStatisticsId" parameterType="java.lang.Integer">
        UPDATE oa_personal_wages
        SET state = #{sendState,jdbcType=INTEGER}
        WHERE
	        wage_statistics_id = #{wageStatisticsId,jdbcType=INTEGER}
    </update>

    <select id="getTotalByWageStatisticsId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select
            COUNT( * )
        from oa_personal_wages
        where wage_statistics_id = #{wageStatisticsId,jdbcType=INTEGER}
    </select>

    <select id="getPagingByWageStatisticsId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oa_personal_wages
        where wage_statistics_id = #{wageStatisticsId,jdbcType=INTEGER}
        LIMIT #{start},#{rows}
    </select>

    <select id="getPersonalWagesByNickName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oa_personal_wages
        where `name` = #{nickName,jdbcType=VARCHAR}
        AND state = 1
        ORDER BY
        settlement_date DESC
        LIMIT 1
    </select>

</mapper>

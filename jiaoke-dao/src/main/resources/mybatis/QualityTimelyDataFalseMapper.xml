<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaoke.quality.dao.QualityTimelyDataFalseMapper">
    <resultMap id="BaseResultMap" type="com.jiaoke.quality.bean.QualityTimelyDataFalse">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="produce_date" jdbcType="DATE" property="produceDate"/>
        <result column="product_time" jdbcType="TIME" property="productTime"/>
        <result column="produce_disc_num" jdbcType="VARCHAR" property="produceDiscNum"/>
        <result column="produce_proportioning_num" jdbcType="VARCHAR" property="produceProportioningNum"/>
        <result column="produce_car_num" jdbcType="VARCHAR" property="produceCarNum"/>
        <result column="produce_custom_num" jdbcType="VARCHAR" property="produceCustomNum"/>
        <result column="material_aggregate_6" jdbcType="INTEGER" property="materialAggregate6"/>
        <result column="material_aggregate_5" jdbcType="INTEGER" property="materialAggregate5"/>
        <result column="material_aggregate_4" jdbcType="INTEGER" property="materialAggregate4"/>
        <result column="material_aggregate_3" jdbcType="INTEGER" property="materialAggregate3"/>
        <result column="material_aggregate_2" jdbcType="INTEGER" property="materialAggregate2"/>
        <result column="material_aggregate_1" jdbcType="INTEGER" property="materialAggregate1"/>
        <result column="material_stone_1" jdbcType="DOUBLE" property="materialStone1"/>
        <result column="material_stone_2" jdbcType="DOUBLE" property="materialStone2"/>
        <result column="material_asphalt" jdbcType="DOUBLE" property="materialAsphalt"/>
        <result column="material_regenerate" jdbcType="DOUBLE" property="materialRegenerate"/>
        <result column="material_additive" jdbcType="DOUBLE" property="materialAdditive"/>
        <result column="material_total" jdbcType="DOUBLE" property="materialTotal"/>
        <result column="temperature_warehouse_1" jdbcType="INTEGER" property="temperatureWarehouse1"/>
        <result column="temperature_mixture" jdbcType="INTEGER" property="temperatureMixture"/>
        <result column="temperature_duster" jdbcType="INTEGER" property="temperatureDuster"/>
        <result column="temperature_asphalt" jdbcType="INTEGER" property="temperatureAsphalt"/>
        <result column="temperature_aggregate" jdbcType="INTEGER" property="temperatureAggregate"/>
        <result column="crew_num" jdbcType="INTEGER" property="crewNum"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, produce_date, product_time, produce_disc_num, produce_proportioning_num, produce_car_num, 
    produce_custom_num, material_aggregate_6, material_aggregate_5, material_aggregate_4, 
    material_aggregate_3, material_aggregate_2, material_aggregate_1, material_stone_1, 
    material_stone_2, material_asphalt, material_regenerate, material_additive, material_total, 
    temperature_warehouse_1, temperature_mixture, temperature_duster, temperature_asphalt, 
    temperature_aggregate, crew_num
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from quality_timely_data_false
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quality_timely_data_false
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.jiaoke.quality.bean.QualityTimelyDataFalse">
    insert into quality_timely_data_false (id, produce_date, product_time, 
      produce_disc_num, produce_proportioning_num, 
      produce_car_num, produce_custom_num, material_aggregate_6, 
      material_aggregate_5, material_aggregate_4, 
      material_aggregate_3, material_aggregate_2, 
      material_aggregate_1, material_stone_1, material_stone_2, 
      material_asphalt, material_regenerate, material_additive, 
      material_total, temperature_warehouse_1, temperature_mixture, 
      temperature_duster, temperature_asphalt, 
      temperature_aggregate, crew_num)
    values (#{id,jdbcType=INTEGER}, #{produceDate,jdbcType=DATE}, #{productTime,jdbcType=TIME}, 
      #{produceDiscNum,jdbcType=VARCHAR}, #{produceProportioningNum,jdbcType=VARCHAR}, 
      #{produceCarNum,jdbcType=VARCHAR}, #{produceCustomNum,jdbcType=VARCHAR}, #{materialAggregate6,jdbcType=INTEGER}, 
      #{materialAggregate5,jdbcType=INTEGER}, #{materialAggregate4,jdbcType=INTEGER}, 
      #{materialAggregate3,jdbcType=INTEGER}, #{materialAggregate2,jdbcType=INTEGER}, 
      #{materialAggregate1,jdbcType=INTEGER}, #{materialStone1,jdbcType=DOUBLE}, #{materialStone2,jdbcType=DOUBLE}, 
      #{materialAsphalt,jdbcType=DOUBLE}, #{materialRegenerate,jdbcType=DOUBLE}, #{materialAdditive,jdbcType=DOUBLE}, 
      #{materialTotal,jdbcType=DOUBLE}, #{temperatureWarehouse1,jdbcType=INTEGER}, #{temperatureMixture,jdbcType=INTEGER}, 
      #{temperatureDuster,jdbcType=INTEGER}, #{temperatureAsphalt,jdbcType=INTEGER}, 
      #{temperatureAggregate,jdbcType=INTEGER}, #{crewNum,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.jiaoke.quality.bean.QualityTimelyDataFalse">
        <selectKey resultType="int" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
        insert into quality_timely_data_false
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="produceDate != null">
                produce_date,
            </if>
            <if test="productTime != null">
                product_time,
            </if>
            <if test="produceDiscNum != null">
                produce_disc_num,
            </if>
            <if test="produceProportioningNum != null">
                produce_proportioning_num,
            </if>
            <if test="produceCarNum != null">
                produce_car_num,
            </if>
            <if test="produceCustomNum != null">
                produce_custom_num,
            </if>
            <if test="materialAggregate6 != null">
                material_aggregate_6,
            </if>
            <if test="materialAggregate5 != null">
                material_aggregate_5,
            </if>
            <if test="materialAggregate4 != null">
                material_aggregate_4,
            </if>
            <if test="materialAggregate3 != null">
                material_aggregate_3,
            </if>
            <if test="materialAggregate2 != null">
                material_aggregate_2,
            </if>
            <if test="materialAggregate1 != null">
                material_aggregate_1,
            </if>
            <if test="materialStone1 != null">
                material_stone_1,
            </if>
            <if test="materialStone2 != null">
                material_stone_2,
            </if>
            <if test="materialAsphalt != null">
                material_asphalt,
            </if>
            <if test="materialRegenerate != null">
                material_regenerate,
            </if>
            <if test="materialAdditive != null">
                material_additive,
            </if>
            <if test="materialTotal != null">
                material_total,
            </if>
            <if test="temperatureWarehouse1 != null">
                temperature_warehouse_1,
            </if>
            <if test="temperatureMixture != null">
                temperature_mixture,
            </if>
            <if test="temperatureDuster != null">
                temperature_duster,
            </if>
            <if test="temperatureAsphalt != null">
                temperature_asphalt,
            </if>
            <if test="temperatureAggregate != null">
                temperature_aggregate,
            </if>
            <if test="crewNum != null">
                crew_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="produceDate != null">
                #{produceDate,jdbcType=DATE},
            </if>
            <if test="productTime != null">
                #{productTime,jdbcType=TIME},
            </if>
            <if test="produceDiscNum != null">
                #{produceDiscNum,jdbcType=VARCHAR},
            </if>
            <if test="produceProportioningNum != null">
                #{produceProportioningNum,jdbcType=VARCHAR},
            </if>
            <if test="produceCarNum != null">
                #{produceCarNum,jdbcType=VARCHAR},
            </if>
            <if test="produceCustomNum != null">
                #{produceCustomNum,jdbcType=VARCHAR},
            </if>
            <if test="materialAggregate6 != null">
                #{materialAggregate6,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate5 != null">
                #{materialAggregate5,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate4 != null">
                #{materialAggregate4,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate3 != null">
                #{materialAggregate3,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate2 != null">
                #{materialAggregate2,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate1 != null">
                #{materialAggregate1,jdbcType=INTEGER},
            </if>
            <if test="materialStone1 != null">
                #{materialStone1,jdbcType=DOUBLE},
            </if>
            <if test="materialStone2 != null">
                #{materialStone2,jdbcType=DOUBLE},
            </if>
            <if test="materialAsphalt != null">
                #{materialAsphalt,jdbcType=DOUBLE},
            </if>
            <if test="materialRegenerate != null">
                #{materialRegenerate,jdbcType=DOUBLE},
            </if>
            <if test="materialAdditive != null">
                #{materialAdditive,jdbcType=DOUBLE},
            </if>
            <if test="materialTotal != null">
                #{materialTotal,jdbcType=DOUBLE},
            </if>
            <if test="temperatureWarehouse1 != null">
                #{temperatureWarehouse1,jdbcType=INTEGER},
            </if>
            <if test="temperatureMixture != null">
                #{temperatureMixture,jdbcType=INTEGER},
            </if>
            <if test="temperatureDuster != null">
                #{temperatureDuster,jdbcType=INTEGER},
            </if>
            <if test="temperatureAsphalt != null">
                #{temperatureAsphalt,jdbcType=INTEGER},
            </if>
            <if test="temperatureAggregate != null">
                #{temperatureAggregate,jdbcType=INTEGER},
            </if>
            <if test="crewNum != null">
                #{crewNum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jiaoke.quality.bean.QualityTimelyDataFalse">
        update quality_timely_data_false
        <set>
            <if test="produceDate != null">
                produce_date = #{produceDate,jdbcType=DATE},
            </if>
            <if test="productTime != null">
                product_time = #{productTime,jdbcType=TIME},
            </if>
            <if test="produceDiscNum != null">
                produce_disc_num = #{produceDiscNum,jdbcType=VARCHAR},
            </if>
            <if test="produceProportioningNum != null">
                produce_proportioning_num = #{produceProportioningNum,jdbcType=VARCHAR},
            </if>
            <if test="produceCarNum != null">
                produce_car_num = #{produceCarNum,jdbcType=VARCHAR},
            </if>
            <if test="produceCustomNum != null">
                produce_custom_num = #{produceCustomNum,jdbcType=VARCHAR},
            </if>
            <if test="materialAggregate6 != null">
                material_aggregate_6 = #{materialAggregate6,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate5 != null">
                material_aggregate_5 = #{materialAggregate5,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate4 != null">
                material_aggregate_4 = #{materialAggregate4,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate3 != null">
                material_aggregate_3 = #{materialAggregate3,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate2 != null">
                material_aggregate_2 = #{materialAggregate2,jdbcType=INTEGER},
            </if>
            <if test="materialAggregate1 != null">
                material_aggregate_1 = #{materialAggregate1,jdbcType=INTEGER},
            </if>
            <if test="materialStone1 != null">
                material_stone_1 = #{materialStone1,jdbcType=DOUBLE},
            </if>
            <if test="materialStone2 != null">
                material_stone_2 = #{materialStone2,jdbcType=DOUBLE},
            </if>
            <if test="materialAsphalt != null">
                material_asphalt = #{materialAsphalt,jdbcType=DOUBLE},
            </if>
            <if test="materialRegenerate != null">
                material_regenerate = #{materialRegenerate,jdbcType=DOUBLE},
            </if>
            <if test="materialAdditive != null">
                material_additive = #{materialAdditive,jdbcType=DOUBLE},
            </if>
            <if test="materialTotal != null">
                material_total = #{materialTotal,jdbcType=DOUBLE},
            </if>
            <if test="temperatureWarehouse1 != null">
                temperature_warehouse_1 = #{temperatureWarehouse1,jdbcType=INTEGER},
            </if>
            <if test="temperatureMixture != null">
                temperature_mixture = #{temperatureMixture,jdbcType=INTEGER},
            </if>
            <if test="temperatureDuster != null">
                temperature_duster = #{temperatureDuster,jdbcType=INTEGER},
            </if>
            <if test="temperatureAsphalt != null">
                temperature_asphalt = #{temperatureAsphalt,jdbcType=INTEGER},
            </if>
            <if test="temperatureAggregate != null">
                temperature_aggregate = #{temperatureAggregate,jdbcType=INTEGER},
            </if>
            <if test="crewNum != null">
                crew_num = #{crewNum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jiaoke.quality.bean.QualityTimelyDataFalse">
    update quality_timely_data_false
    set produce_date = #{produceDate,jdbcType=DATE},
      product_time = #{productTime,jdbcType=TIME},
      produce_disc_num = #{produceDiscNum,jdbcType=VARCHAR},
      produce_proportioning_num = #{produceProportioningNum,jdbcType=VARCHAR},
      produce_car_num = #{produceCarNum,jdbcType=VARCHAR},
      produce_custom_num = #{produceCustomNum,jdbcType=VARCHAR},
      material_aggregate_6 = #{materialAggregate6,jdbcType=INTEGER},
      material_aggregate_5 = #{materialAggregate5,jdbcType=INTEGER},
      material_aggregate_4 = #{materialAggregate4,jdbcType=INTEGER},
      material_aggregate_3 = #{materialAggregate3,jdbcType=INTEGER},
      material_aggregate_2 = #{materialAggregate2,jdbcType=INTEGER},
      material_aggregate_1 = #{materialAggregate1,jdbcType=INTEGER},
      material_stone_1 = #{materialStone1,jdbcType=DOUBLE},
      material_stone_2 = #{materialStone2,jdbcType=DOUBLE},
      material_asphalt = #{materialAsphalt,jdbcType=DOUBLE},
      material_regenerate = #{materialRegenerate,jdbcType=DOUBLE},
      material_additive = #{materialAdditive,jdbcType=DOUBLE},
      material_total = #{materialTotal,jdbcType=DOUBLE},
      temperature_warehouse_1 = #{temperatureWarehouse1,jdbcType=INTEGER},
      temperature_mixture = #{temperatureMixture,jdbcType=INTEGER},
      temperature_duster = #{temperatureDuster,jdbcType=INTEGER},
      temperature_asphalt = #{temperatureAsphalt,jdbcType=INTEGER},
      temperature_aggregate = #{temperatureAggregate,jdbcType=INTEGER},
      crew_num = #{crewNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getTimeSurveillanceFalseData" resultMap="java.util.HashMap">
        (
        SELECT
               'crew1' AS 'crewNum',
               date_format(produce_date, '%Y-%m-%d') AS produce_date,
               date_format(produce_time, '%T') AS produce_time,
               produce_disc_num,
               produce_proportioning_num,
               produce_car_num,
               produce_custom_num,
               material_aggregate_1,
               material_aggregate_2,
               material_aggregate_3,
               material_aggregate_4,
               material_aggregate_5,
               material_aggregate_6,
               material_stone_1,
               material_stone_2,
               material_asphalt,
               material_regenerate,
               material_additive,
               material_total,
               temperature_warehouse_1 ,
               temperature_mixture ,
               temperature_duster ,
               temperature_asphalt ,
               temperature_aggregate
        FROM
             quality_timely_data_false
        WHERE crew_num = 1
        ORDER BY
                 id DESC
        LIMIT 1
        )
        UNION ALL
                (
                SELECT
                       'crew2' AS 'crewNum',
                       date_format(produce_date, '%Y-%m-%d') AS produce_date,
                       date_format(produce_time, '%T') AS produce_time,
                       produce_disc_num,
                       produce_proportioning_num,
                       produce_car_num,
                       produce_custom_num,
                       material_aggregate_1,
                       material_aggregate_2,
                       material_aggregate_3,
                       material_aggregate_4,
                       material_aggregate_5,
                       material_aggregate_6,
                       material_stone_1,
                       material_stone_2,
                       material_asphalt,
                       material_regenerate,
                       material_additive,
                       material_total,
                       temperature_warehouse_1 ,
                       temperature_mixture,
                       temperature_duster,
                       temperature_asphalt ,
                       temperature_aggregate
                FROM
                     quality_timely_data_false
                WHERE crew_num = 2
                ORDER BY
                         id DESC
                LIMIT 1
                )
    </select>

    <select id="selectHistoryDataToDayCount" resultType="int">
        SELECT
            count( * )
        FROM
        ( SELECT produce_date FROM quality_timely_data_false GROUP BY produce_date ) AS f;
    </select>

    <select id="selectHistoryDataToDay" resultType="com.jiaoke.quality.bean.QualityDataManagerDay">
        SELECT
            *
        FROM
            (
            SELECT
                crew_num AS crewNum,
                date_format( produce_date, '%Y-%m-%d' ) AS produceDate,
                SUM( material_total ) DIV 100 AS materialTotal,
                date_format( MIN( product_time ), '%T' ) AS startTime,
                date_format( MAX( product_time ), '%T' ) AS endTime
            FROM
                quality_timely_data_false
            GROUP BY
                produceDate
            ) AS t
        ORDER BY
            t.produceDate DESC
        LIMIT #{pageFirstNum},#{eachPageDataNum}
    </select>

    <insert id="insertWarningPromessage" parameterType="com.jiaoke.quality.bean.QualityWaringDataFalse">
        INSERT INTO quality_warning_data_false (
        realtime_data_sham_id,
        material_name,
        actual_ratio,
        moudle_ratio,
        deviation_ratio,
        warning_level
        )
        VALUES
        <foreach collection ="list" item="reddemCode" index= "index" separator =",">
            (
            #{reddemCode.realtimeDataShamId},
            #{reddemCode.materialName},
            #{reddemCode.actualRatio},
            #{reddemCode.moudleRatio},
            #{reddemCode.deviationRatio},
            #{reddemCode.warningLevel}
            )
        </foreach >
    </insert>

    <select id="selectFalseDataToChars" resultType="java.util.Map">
        (SELECT
                t1.*,
                'crew1' AS 'crewNum',
                t2.material_aggregate_1,
                t2.material_aggregate_2,
                t2.material_aggregate_3,
                t2.material_aggregate_4,
                t2.material_aggregate_5,
                t2.material_aggregate_6,
                t2.material_stone_1,
                t2.material_stone_2,
                t2.material_asphalt,
                t2.material_regenerate,
                t2.material_additive,
                t2.temperature_warehouse_1 as tem_warehouse_1,
                t2.temperature_mixture as tem_mixture,
                t2.temperature_duster as tem_duster,
                t2.temperature_asphalt as tem_asphalt ,
                t2.temperature_aggregate as tem_aggregate,
                t2.material_total
         FROM
              quality_proportioning_message AS t1
                  INNER JOIN (
                             SELECT
                                    produce_proportioning_num,
                                    material_aggregate_1,
                                    material_aggregate_2,
                                    material_aggregate_3,
                                    material_aggregate_4,
                                    material_aggregate_5,
                                    material_aggregate_6,
                                    material_stone_1,
                                    material_stone_2,
                                    material_asphalt,
                                    material_regenerate,
                                    material_additive,
                                    temperature_warehouse_1,
                                    temperature_mixture,
                                    temperature_duster,
                                    temperature_asphalt,
                                    temperature_aggregate,
                                    material_total
                             FROM
                                  quality_timely_data_false
                             WHERE crew_num = 1
                             ORDER BY
                                      id DESC
                             LIMIT 1
                             ) as t2
                      on t1.crew1_modele_id = t2.produce_proportioning_num)
        UNION ALL
                (SELECT
                        t1.*,
                        'crew2' AS 'crewNum',
                        t2.material_aggregate_1,
                        t2.material_aggregate_2,
                        t2.material_aggregate_3,
                        t2.material_aggregate_4,
                        t2.material_aggregate_5,
                        t2.material_aggregate_6,
                        t2.material_stone_1,
                        t2.material_stone_2,
                        t2.material_asphalt,
                        t2.material_regenerate,
                        t2.material_additive,
                        t2.temperature_warehouse_1 as tem_warehouse_1,
                        t2.temperature_mixture as tem_mixture,
                        t2.temperature_duster as tem_duster,
                        t2.temperature_asphalt as tem_asphalt ,
                        t2.temperature_aggregate as tem_aggregate,
                        t2.material_total
                 FROM
                      quality_proportioning_message AS t1
                          INNER JOIN (
                                     SELECT
                                            produce_proportioning_num,
                                            material_aggregate_1,
                                            material_aggregate_2,
                                            material_aggregate_3,
                                            material_aggregate_4,
                                            material_aggregate_5,
                                            material_aggregate_6,
                                            material_stone_1,
                                            material_stone_2,
                                            material_asphalt,
                                            material_regenerate,
                                            material_additive,
                                            temperature_warehouse_1,
                                            temperature_mixture,
                                            temperature_duster,
                                            temperature_asphalt,
                                            temperature_aggregate,
                                            material_total
                                     FROM
                                          quality_timely_data_false
                                     WHERE crew_num = 2
                                     ORDER BY
                                              id DESC
                                     LIMIT 1
                                     ) as t2
                              on t1.crew1_modele_id = t2.produce_proportioning_num)
    </select>

</mapper>